{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/index.md","hash":"13e673e206d644417044823c13022e66815661f0","modified":1641816679735},{"_id":"source/_posts/Integer-valueOf和Integer-parseInt.md","hash":"2fa7856c366df467ae380a877bed2cf0376ce982","modified":1641812782347},{"_id":"source/_posts/hello-world.md","hash":"9a48c95edfaa3fb0c5ab3d48611c8c6b9d1cc018","modified":1635831104772},{"_id":"source/_posts/java接口.md","hash":"9ca9950cee28c8dfb256e2e1ee75b27e1f378870","modified":1641813047729},{"_id":"source/_posts/java注解.md","hash":"c320bcc9a80618e43b2c7c2518cfb1fd03ddec53","modified":1641812839463},{"_id":"source/_posts/pulsar调研.md","hash":"272cb7277ac7d9a5a822c44d1f93821494d95d3c","modified":1641814434495},{"_id":"source/_posts/shell脚本入门.md","hash":"e6e63d525167579a09969356252cf7aa058a2666","modified":1641812861590},{"_id":"source/_posts/typora常用命令记录.md","hash":"97e2438bb909c01dc3d4b7e4cd70ce9a1ebf77b6","modified":1641812874412},{"_id":"source/_posts/会计学基础.md","hash":"89e75a0b3baceb026c2c75638bb22298bef00075","modified":1641814249593},{"_id":"source/_posts/初识hexo.md","hash":"4bf75ff25e83b622bddace0d966c4ed1c30510e0","modified":1641812887727},{"_id":"source/_posts/动态规划.md","hash":"5b53cd06056ecea6c2cfc34cdf100f791bd1c2d2","modified":1641812900539},{"_id":"source/_posts/明史人物记录.md","hash":"502dcf3bc3d82866cb62227beae91b1a5915acf1","modified":1641816302221},{"_id":"source/about/index.md","hash":"11501e926be6d1c62b2d8f05edbdd3596faffb4c","modified":1641812139693},{"_id":"source/categories/index.md","hash":"8dc57a7ff10a6f4e228e54bbcf5f0c7e4e30363d","modified":1641812198261},{"_id":"source/tags/index.md","hash":"a40162a9e1ed110baf669e6c03b01b483785c6b2","modified":1641812223987},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1640838215795},{"_id":"themes/next/.eslintrc.json","hash":"611e15c3fcb41dc68fa8532ee595a1262a1b5a8a","modified":1640838215796},{"_id":"themes/next/.gitattributes","hash":"aeeca2f1e987d83232d7870d1435a4e3ed66b648","modified":1640838215796},{"_id":"themes/next/.gitignore","hash":"087b7677078303acb2acb47432165950e4d29b43","modified":1640838215816},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1640838215818},{"_id":"themes/next/LICENSE.md","hash":"8cfb03967dd4cbaf3b825271ffce0039aa3fc22a","modified":1640838215818},{"_id":"themes/next/README.md","hash":"43fe29330352545446a532e6630866251129882a","modified":1640838215820},{"_id":"themes/next/_config.yml","hash":"60aef71604193e6bc5c8ae4e4c03e126a86a68bc","modified":1641813820093},{"_id":"themes/next/_vendors.yml","hash":"ba72c575e627697a050614411706cb20206d4b71","modified":1640838215821},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1640838215822},{"_id":"themes/next/package.json","hash":"e527d094273cf3be4766630bbfe6cc8cf1eeb529","modified":1640838215913},{"_id":"themes/next/.githooks/install.js","hash":"305c2a269818466eed9e381b866c6cd1ad7f8afd","modified":1640838215798},{"_id":"themes/next/renovate.json","hash":"767b077c7b615e20af3cf865813cd64674a9bea6","modified":1640838215914},{"_id":"themes/next/.githooks/pre-commit","hash":"b69b9d0b51e27d5d4c87c3242f5067c2cda26e44","modified":1640838215798},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"593ae64e72d43c020a697eac65b1f9c3483ff097","modified":1640838215799},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"2fdca1040427cabfe27cae6754ec5e027ec7092e","modified":1640838215801},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"a103e2d875f7434191859e5b42075cfa9a4cbcb3","modified":1640838215804},{"_id":"themes/next/.github/config.yml","hash":"0956bf71b6f36632b63b14d26580458041a5abd2","modified":1640838215805},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1640838215807},{"_id":"themes/next/.github/label-commenter-config.yml","hash":"a1aa85a2fc66ff0c52c65bd97b0fa282e297a73f","modified":1640838215807},{"_id":"themes/next/.github/labeler.yml","hash":"ff76a903609932a867082b8ccced906e9910533a","modified":1640838215807},{"_id":"themes/next/.github/release-drafter.yml","hash":"de38f816e3023e0a5c1fd1f3c2b626f78bc35246","modified":1640838215808},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1640838215824},{"_id":"themes/next/docs/AUTHORS.md","hash":"579014d47f45b27fd1618b9709f0efe9585c7449","modified":1640838215825},{"_id":"themes/next/docs/LICENSE.txt","hash":"d1cd5a8e83d3bbdb50f902d2b487813da95ddfd3","modified":1640838215825},{"_id":"themes/next/languages/README.md","hash":"b1c96465b3bc139bf5ba6200974b66581d8ff85a","modified":1640838215831},{"_id":"themes/next/languages/ar.yml","hash":"cc7e3e2855348563d746f15c4752b9c63fcdd91a","modified":1640838215832},{"_id":"themes/next/languages/de.yml","hash":"83023c4246b93a2f89f342afe29a7b9e1185f74f","modified":1640838215833},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1640838215834},{"_id":"themes/next/languages/en.yml","hash":"66445143decfbb5eb7031eb370698e31d5222a7a","modified":1640838215834},{"_id":"themes/next/languages/es.yml","hash":"07955d78028cea2a590c63fdc2c01ca3ee05a727","modified":1640838215835},{"_id":"themes/next/languages/fr.yml","hash":"328c255c82e9b561e20a9f51a4d84abc63d1b90a","modified":1640838215837},{"_id":"themes/next/languages/fa.yml","hash":"e09fad889ab3ae87874093e1acd51edc9297d869","modified":1640838215836},{"_id":"themes/next/languages/id.yml","hash":"d7c337ca72efb0bd02ade8b5560c559384ad84dd","modified":1640838215839},{"_id":"themes/next/languages/it.yml","hash":"c038ff0cadbe405750d980bcacfd3900acf96905","modified":1640838215840},{"_id":"themes/next/languages/ja.yml","hash":"57a35b21aca04ce8bca64fb5933f35626c462ea3","modified":1640838215840},{"_id":"themes/next/languages/ko.yml","hash":"d6e2add7488065ec4f7d21cfcf7f0eaa877a84f4","modified":1640838215840},{"_id":"themes/next/languages/nl.yml","hash":"e47858bd1e0d0622c15366ae6c0513d996f589e3","modified":1640838215841},{"_id":"themes/next/languages/pt-BR.yml","hash":"305025e932832328b7e2a8a584638a23c462e68f","modified":1640838215842},{"_id":"themes/next/languages/ru.yml","hash":"7d13108f4a70ff6a162508a49678e4a477fa7b56","modified":1640838215844},{"_id":"themes/next/languages/pt.yml","hash":"ff93459250c33d3c7ba06c30164cc4208edf9b33","modified":1640838215843},{"_id":"themes/next/languages/si.yml","hash":"c15ed758dbad890e856f4fc281208d7b78cc1a59","modified":1640838215844},{"_id":"themes/next/languages/uk.yml","hash":"f32871f67c63d26bc4e3e15df9b01f5a41236a50","modified":1640838215847},{"_id":"themes/next/languages/tr.yml","hash":"d3262d2221b0583a52e5d20a3cd1380f5dc49378","modified":1640838215846},{"_id":"themes/next/languages/vi.yml","hash":"e452ea8c48993262a3e8fce9d92072cafabfc734","modified":1640838215848},{"_id":"themes/next/languages/zh-CN.yml","hash":"f8379d15038e22ef7039d91272cb4f36842dbbe1","modified":1640838215849},{"_id":"themes/next/languages/zh-HK.yml","hash":"c1ee97ceb56da76ecdc7b69fa975f28c8574441b","modified":1640838215851},{"_id":"themes/next/languages/zh-TW.yml","hash":"70c45076ad722b777956048fcc430eac37844c11","modified":1640838215851},{"_id":"themes/next/layout/_layout.njk","hash":"2842f3e9fdde5bbd14cac89629221e68d80c8ea1","modified":1640838215852},{"_id":"themes/next/layout/archive.njk","hash":"aa491dba8f746e626c273a920effedf7d0b32170","modified":1640838215908},{"_id":"themes/next/layout/category.njk","hash":"82f541452cae76a94ee15cb8d8a888f44260a0fd","modified":1640838215909},{"_id":"themes/next/layout/index.njk","hash":"fa52c3049871e879980cb6abccdea3792ca4ce70","modified":1640838215910},{"_id":"themes/next/layout/page.njk","hash":"fddfdee95f5da86eab8a85d6eb1901996d2153cf","modified":1640838215911},{"_id":"themes/next/layout/post.njk","hash":"707a50e50b90df5fbeaf8407d12895d04163a290","modified":1640838215912},{"_id":"themes/next/layout/tag.njk","hash":"b6c017d30d08ddd30d66e9c6f3a71aa65d214eac","modified":1640838215912},{"_id":"themes/next/test/index.js","hash":"983a505399796b9d9e174ba46d89abbdde38f8ee","modified":1640838216058},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"032194e7975564176f2109aa8b7c020fa6d5e6b1","modified":1640838215801},{"_id":"themes/next/.github/ISSUE_TEMPLATE/config.yml","hash":"daeedc5da2ee74ac31cf71846b766ca6499e9fc6","modified":1640838215802},{"_id":"themes/next/.github/workflows/label-commenter.yml","hash":"7dec949b13131783e726facb2f4acde0945db1b8","modified":1640838215809},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"618d07b49f4774cd79613d4001984a19d954a6ad","modified":1640838215804},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"4a7885fe2c8b25be02ab57c345cd862aeeeeacaf","modified":1640838215804},{"_id":"themes/next/.github/workflows/labeler.yml","hash":"46d0b29dc561fe571d91fd06a7c8ef606b984c72","modified":1640838215810},{"_id":"themes/next/.github/workflows/linter.yml","hash":"b57d876c90d1645a52bbba8a52d47ad0b0c96140","modified":1640838215811},{"_id":"themes/next/.github/workflows/lock.yml","hash":"58eca481fd71088a8ae1dbc04645bcfc03460b87","modified":1640838215813},{"_id":"themes/next/.github/workflows/release-drafter.yml","hash":"359b74890a47d784e35a5cc3c7885d5cdf302e82","modified":1640838215813},{"_id":"themes/next/.github/workflows/stale.yml","hash":"32e7dfb55ecf8af66aebfed471be09ef2eb10e18","modified":1640838215814},{"_id":"themes/next/docs/ru/README.md","hash":"e1d6bf38cf34972ca2ee5331a727787fe14082a3","modified":1640838215827},{"_id":"themes/next/.github/workflows/tester.yml","hash":"645bb69d0b6cc062c47fabb1ccb2297ccbcfa7f5","modified":1640838215816},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7befb4325b107dd668d9eae3d7e86a34910ce3f2","modified":1640838215829},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"a09ceb82b45dd8b7da76c227f3d0bb7eebe7d5d1","modified":1640838215829},{"_id":"themes/next/docs/zh-CN/README.md","hash":"354b0b0a24cbe97cccf2ec8bd97eb7d624fa0dea","modified":1640838215830},{"_id":"themes/next/layout/_macro/post-collapse.njk","hash":"d9d8e6d7a6a8c80009dd5334cc17fd3e4977a008","modified":1640838215853},{"_id":"themes/next/layout/_macro/sidebar.njk","hash":"eec74e135d01948361020140c3798769e1e7363b","modified":1640838215855},{"_id":"themes/next/layout/_partials/comments.njk","hash":"d6b7bb7764e3b471ed6b4e5715f6cbe2dd453f59","modified":1640838215856},{"_id":"themes/next/layout/_macro/post.njk","hash":"367cafd3acc1c6a045d8a72de0479aabbf4a3559","modified":1640838215854},{"_id":"themes/next/layout/_partials/footer.njk","hash":"65f0d69084e0e26a0153d3b8db610a15c4102691","modified":1640838215857},{"_id":"themes/next/layout/_partials/languages.njk","hash":"537026fc120adeef9148c98ebf074207e3810538","modified":1640838215864},{"_id":"themes/next/layout/_partials/pagination.njk","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1640838215870},{"_id":"themes/next/layout/_partials/widgets.njk","hash":"967594ee64805e27b7ff9d957e23ab3f5c948600","modified":1640838215881},{"_id":"themes/next/layout/_third-party/fancybox.njk","hash":"53ad3c31762b74e5d29787b37d5e494cc4fded9b","modified":1640838215895},{"_id":"themes/next/layout/_third-party/index.njk","hash":"33a4a3275474bd3bb2e8d1b0ea01b42dda9ea608","modified":1640838215895},{"_id":"themes/next/layout/_third-party/pace.njk","hash":"13b2a77b4858a127f458ea092b6f713b052befac","modified":1640838215898},{"_id":"themes/next/layout/_third-party/quicklink.njk","hash":"73bc15a9c3c5c239ab90efa19a1e721f41f3cb93","modified":1640838215900},{"_id":"themes/next/layout/_third-party/rating.njk","hash":"d0444179fec512760ab1d4f76928d795b971c884","modified":1640838215900},{"_id":"themes/next/layout/_scripts/index.njk","hash":"4eb65641b47ea9b23ed2ddfd69b18f21d7d8f214","modified":1640838215882},{"_id":"themes/next/layout/_scripts/vendors.njk","hash":"0a1470440f11362df2b1cd6b6228e273d9f999d6","modified":1640838215882},{"_id":"themes/next/scripts/events/index.js","hash":"8bca7ae3cebb3857866d718a562c5d8820fcfbe5","modified":1640838215916},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"0c9a1fe9906672724dbf274154a37bac1915ca2c","modified":1640838215928},{"_id":"themes/next/scripts/filters/locals.js","hash":"8499b9c8c6cdae8aa7e4f5ec5b4b76037969db76","modified":1640838215928},{"_id":"themes/next/scripts/helpers/engine.js","hash":"18cc82558e7a9f3b6086c41ce9de0c46e807a66c","modified":1640838215931},{"_id":"themes/next/scripts/filters/post.js","hash":"5a132b7f9280a40b3d5fb40928c8cbbe071fe6f6","modified":1640838215929},{"_id":"themes/next/scripts/filters/minify.js","hash":"9789307212d729c8cb65e3541348938a1965ff6f","modified":1640838215928},{"_id":"themes/next/scripts/helpers/font.js","hash":"0a6fa582a0890ecaf5f03f758a730936e48aeca1","modified":1640838215931},{"_id":"themes/next/source/css/_colors.styl","hash":"a88430865c99f47ce1d8240f8895819b8b7b0c06","modified":1640838215942},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"e73f43f1bcb46965e317285d6831e129a40ea59b","modified":1640838215931},{"_id":"themes/next/scripts/helpers/next-vendors.js","hash":"52acbc74c1ead8a77cd3bbcba4e033053683f7d0","modified":1640838215933},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"98fc68cf3fcd6253bbb94068ab1d86578a4ef9ea","modified":1640838215932},{"_id":"themes/next/source/css/_mixins.styl","hash":"2ca820b221fb7458e6ef4fbcff826e1d1cf4b473","modified":1640838215987},{"_id":"themes/next/source/css/main.styl","hash":"38b8a12681a3a04bed02aa1659054912ed6def11","modified":1640838216008},{"_id":"themes/next/source/css/noscript.styl","hash":"7dc97674c232f6ca71e48b95e3f66472cd8e9c05","modified":1640838216009},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1640838216011},{"_id":"themes/next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1640838216011},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1640838216012},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1640838216013},{"_id":"themes/next/source/js/bookmark.js","hash":"1457291a7244b7786ec35b949d97183e4fbd181d","modified":1640838216016},{"_id":"themes/next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1640838216014},{"_id":"themes/next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1640838216015},{"_id":"themes/next/source/js/comments-buttons.js","hash":"81ea6cbcdf0357094753d7523919c1eafa38e79f","modified":1640838216017},{"_id":"themes/next/source/js/comments.js","hash":"0b4daf0ce610760bd52e95d423f61f3e1c72442a","modified":1640838216018},{"_id":"themes/next/source/js/config.js","hash":"211a9ab35205ccfa6b7c74394bade84da0d00af7","modified":1640838216019},{"_id":"themes/next/source/js/motion.js","hash":"20b979ebe3671cb415e6e7171485d65cc347086e","modified":1640838216019},{"_id":"themes/next/source/js/next-boot.js","hash":"b0bdb542a809932182cfbb8772328115142a0b77","modified":1640838216020},{"_id":"themes/next/source/js/pjax.js","hash":"85293c253e0f43540572c4e4615c712325a732e2","modified":1640838216021},{"_id":"themes/next/source/js/schedule.js","hash":"6dade4388aa6579576a35758075134f573985d57","modified":1640838216022},{"_id":"themes/next/source/js/utils.js","hash":"c13fa66aae52f59f88881738c00ebdcaf0209496","modified":1640838216056},{"_id":"themes/next/scripts/tags/button.js","hash":"86c71c73a63744efbbbb367612871fede0d69529","modified":1640838215934},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"8e912c715702addaf0cefe63e580e45b97ae8c3f","modified":1640838215935},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"b4d12e6fe29089be0f43bafc9eea736602cd16bf","modified":1640838215935},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"1c609312a71d47f838226346aad5c2e1c35f15dd","modified":1640838215936},{"_id":"themes/next/scripts/tags/index.js","hash":"255dd1090e8319b557eeca43571f0e4f8aab013b","modified":1640838215936},{"_id":"themes/next/scripts/tags/label.js","hash":"c18b0e619a779ed40be7f014db92af18f45fbd5c","modified":1640838215937},{"_id":"themes/next/scripts/tags/link-grid.js","hash":"3f358bb78c5c6fdf45de287f3ead553e3a6a93c2","modified":1640838215938},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"b3844e168b51a99d495ca05562ffac47677f5728","modified":1640838215938},{"_id":"themes/next/scripts/tags/note.js","hash":"a12fd53e421400836a3722ae69130969558d6ac0","modified":1640838215939},{"_id":"themes/next/scripts/tags/pdf.js","hash":"317ba4611020cc840854386dde098dbbe452777e","modified":1640838215940},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e0ed5fe1bc9d2957952a1aacdf3252d6ef3f9743","modified":1640838215940},{"_id":"themes/next/scripts/tags/video.js","hash":"f6ad3f52779f0636251238d3cbdc5b6f91cc5aba","modified":1640838215941},{"_id":"themes/next/test/helpers/font.js","hash":"6f5076bd3f2724e47b46ca69028393a9b6275cd1","modified":1640838216057},{"_id":"themes/next/test/tags/button.js","hash":"a50ca44eaec3d91c2958e3157d624cd3e68828c7","modified":1640838216059},{"_id":"themes/next/test/helpers/next-url.js","hash":"08e84781f1cd54e5634b86877ad9cefae4a78e95","modified":1640838216058},{"_id":"themes/next/test/helpers/index.js","hash":"2fb58dca3df2fe53116ee2b1232fa26ebe7b2ce5","modified":1640838216058},{"_id":"themes/next/test/tags/caniuse.js","hash":"2852be850d9103c25114253a45e6c62e32517de4","modified":1640838216060},{"_id":"themes/next/test/tags/center-quote.js","hash":"2ac4b5a358681691a17e736de06fce0b640a7023","modified":1640838216060},{"_id":"themes/next/test/tags/group-pictures.js","hash":"8f66d3c6f03fb11d85aa2ab05c9b3c9aa2b4e994","modified":1640838216061},{"_id":"themes/next/test/tags/index.js","hash":"5cad001936a694bf32d59751cc2b68a66199f976","modified":1640838216061},{"_id":"themes/next/test/tags/label.js","hash":"6cad7d84c42511459a89cda3971e8ea5cdee0125","modified":1640838216062},{"_id":"themes/next/test/tags/link-grid.js","hash":"41730266306c02362258384cd73659223928361f","modified":1640838216062},{"_id":"themes/next/test/tags/mermaid.js","hash":"f718a3d0e303d842e2ca5a3b162539a49e45a520","modified":1640838216063},{"_id":"themes/next/test/tags/note.js","hash":"161a81ce749e239d2403681372d48ecc1b51d7b9","modified":1640838216064},{"_id":"themes/next/test/tags/pdf.js","hash":"2d114596a8a180b2f3cd2a9c6528a328961f12d4","modified":1640838216064},{"_id":"themes/next/test/tags/tabs.js","hash":"b19d2592347eae5d6a7a97ca7e8cec03e8f25b51","modified":1640838216065},{"_id":"themes/next/test/validate/index.js","hash":"560862194991c5963da5a411629d8e6c71d20ee2","modified":1640838216066},{"_id":"themes/next/test/tags/video.js","hash":"88db9a3a26cd35525c43c0339fcd1c5965ec9518","modified":1640838216065},{"_id":"themes/next/layout/_partials/head/head-unique.njk","hash":"bd87e3a877ebab4508fc2b48b41c96b45c4dd970","modified":1640838215859},{"_id":"themes/next/layout/_partials/head/head.njk","hash":"abcc550cb14374fb7452d6edee63967ad9583d1c","modified":1640838215859},{"_id":"themes/next/layout/_partials/header/brand.njk","hash":"8e08c19e1bd92f3179907b0ff3743d6e2371d7ae","modified":1640838215860},{"_id":"themes/next/layout/_partials/header/index.njk","hash":"1b2ae17f3c394ce310fe2d9ed5f4d07d8cc74ae7","modified":1640838215861},{"_id":"themes/next/layout/_partials/header/menu-item.njk","hash":"f066390762faf6684a523e2eb943420023aac2b1","modified":1640838215862},{"_id":"themes/next/layout/_partials/header/menu.njk","hash":"67372599fe025ebe442b73151e5bb56415758356","modified":1640838215862},{"_id":"themes/next/layout/_partials/header/sub-menu.njk","hash":"940cad08a67e6c361214045096bd3cdffdf44fcf","modified":1640838215864},{"_id":"themes/next/layout/_partials/page/breadcrumb.njk","hash":"9c136edd2248e2d50c1f6110b75e2b75c299bbd7","modified":1640838215865},{"_id":"themes/next/layout/_partials/page/page-header.njk","hash":"92553feb26f30f7fc9147bc4ef122908a9da06be","modified":1640838215866},{"_id":"themes/next/layout/_partials/page/categories.njk","hash":"b352346dd2cb42f7eeaec5e39d9a2a353b029775","modified":1640838215866},{"_id":"themes/next/layout/_partials/page/schedule.njk","hash":"130e776575d634201d4f8ef3d78dc12624f19fde","modified":1640838215867},{"_id":"themes/next/layout/_partials/page/tags.njk","hash":"752df7d12360a077c51a25609916a3ecc1763bb3","modified":1640838215868},{"_id":"themes/next/layout/_partials/post/post-copyright.njk","hash":"0ebc0142abebbeef4278e32abb543c7d7fa75d88","modified":1640838215871},{"_id":"themes/next/layout/_partials/post/post-followme.njk","hash":"ebf83083856f8bd81ad47ffb985d44e338b4e6bb","modified":1640838215871},{"_id":"themes/next/layout/_partials/post/post-footer.njk","hash":"e3502059bcc443ce932946a9891fcbe8b2bb362d","modified":1640838215871},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.njk","hash":"3e80332f88b101141be69f2a07f54ed8c053eabb","modified":1640838215884},{"_id":"themes/next/layout/_partials/post/post-meta.njk","hash":"9a9c4fb7e7c4fe4b7d474bdfdb4ed2b0a5423df2","modified":1640838215872},{"_id":"themes/next/layout/_third-party/analytics/cloudflare.njk","hash":"c7cea42f6db2137c11ca1d83e43fcb7ad7ccfb89","modified":1640838215885},{"_id":"themes/next/layout/_partials/post/post-reward.njk","hash":"58b3f657a47bae406e5fcf19cd5e42680785ac71","modified":1640838215875},{"_id":"themes/next/layout/_partials/post/post-related.njk","hash":"80d3dac42740d2aef677e25165e31c05eb048887","modified":1640838215873},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.njk","hash":"52ad137450f7b3d6a330e16b3ed1c6174290f0eb","modified":1640838215885},{"_id":"themes/next/layout/_third-party/analytics/growingio.njk","hash":"9ff9ec05c2037beea229a6bb698f9e3546973220","modified":1640838215886},{"_id":"themes/next/layout/_third-party/analytics/index.njk","hash":"465fcffd4216f8ca0ea2613fe9cf7308f71b9da5","modified":1640838215886},{"_id":"themes/next/layout/_partials/sidebar/site-overview.njk","hash":"c5c38b4fb137cc799a6ec31f391d1efc12234c8c","modified":1640838215880},{"_id":"themes/next/layout/_third-party/chat/chatra.njk","hash":"09d2c9487d75894d45a823e3237ae9f90fd6ee01","modified":1640838215887},{"_id":"themes/next/layout/_partials/search/index.njk","hash":"9766852e72c1809d8c1eea71ac6116b4cc0886d2","modified":1640838215877},{"_id":"themes/next/layout/_partials/search/algolia-search.njk","hash":"93fbb449fbd599cb4315d7eb0daeb239811b233f","modified":1640838215876},{"_id":"themes/next/layout/_partials/search/localsearch.njk","hash":"f73d25a8ccfdd5d4ca2953dc434ff8ce36034c57","modified":1640838215878},{"_id":"themes/next/layout/_third-party/comments/changyan.njk","hash":"5f7967bd946060f4102263a552ddfbae9975e7ea","modified":1640838215890},{"_id":"themes/next/layout/_third-party/chat/tidio.njk","hash":"3fbc72427c1211e5dcfd269af1a74852a7ba5c1a","modified":1640838215889},{"_id":"themes/next/layout/_third-party/chat/gitter.njk","hash":"375a86f0b19e130cfa7707007e3a53d9ae7c9b64","modified":1640838215888},{"_id":"themes/next/layout/_third-party/comments/disqus.njk","hash":"b0828dd1b1fd66ecd612d9e886a08e7579e9a4f7","modified":1640838215890},{"_id":"themes/next/layout/_third-party/comments/gitalk.njk","hash":"6fd4df5c21cfe530dbb0c012bc0b202f2c362b9c","modified":1640838215892},{"_id":"themes/next/layout/_third-party/comments/disqusjs.njk","hash":"c5086b4c35f730f82c99c4a8317f2f153ebde869","modified":1640838215891},{"_id":"themes/next/layout/_third-party/comments/isso.njk","hash":"38badcc7624a13961381c2465478056b9602aee5","modified":1640838215893},{"_id":"themes/next/layout/_third-party/comments/livere.njk","hash":"b8e0d5de584cece5e05b03db5b86145aa1e422b4","modified":1640838215893},{"_id":"themes/next/layout/_third-party/comments/utterances.njk","hash":"a7921be7328e1509d33b435175f5333a9aada66f","modified":1640838215894},{"_id":"themes/next/layout/_third-party/math/index.njk","hash":"1856c4b035c5b8e64300a11af0461b519dfc4cf4","modified":1640838215896},{"_id":"themes/next/layout/_third-party/math/katex.njk","hash":"a84db8bc8804335f95609a221ac1746433dcdc89","modified":1640838215898},{"_id":"themes/next/layout/_third-party/math/mathjax.njk","hash":"a62aa1ed4e35b8d0451d83f341bf0a97538bc9a4","modified":1640838215898},{"_id":"themes/next/layout/_third-party/search/algolia-search.njk","hash":"67f67a77f27103177b9940446f43610229536d82","modified":1640838215901},{"_id":"themes/next/layout/_third-party/search/localsearch.njk","hash":"210c32b654adae3d8076c4417d370b42af258cea","modified":1640838215902},{"_id":"themes/next/layout/_third-party/tags/mermaid.njk","hash":"dd8f963acd5a3685be46fd5319c06df0308d99b2","modified":1640838215906},{"_id":"themes/next/layout/_third-party/tags/pdf.njk","hash":"0386c708975cc5faea4f782611c5d2c6b8ac2850","modified":1640838215907},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"d97790e4b442a1e3ded7d7b4f84b8ee6cdb6e8ea","modified":1640838215903},{"_id":"themes/next/layout/_third-party/statistics/firestore.njk","hash":"af5336e8bbdc4638435971da115bb7443d374ade","modified":1640838215903},{"_id":"themes/next/layout/_third-party/statistics/index.njk","hash":"866ffa15a3250678eb8a90aa6f609fa965db90fd","modified":1640838215904},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.njk","hash":"8703d1855bb8d251c9b7c2940b7e3be525e53000","modified":1640838215905},{"_id":"themes/next/scripts/events/lib/config.js","hash":"a912944cae0d864458d365867b8a9c89f348e68a","modified":1640838215917},{"_id":"themes/next/scripts/events/lib/highlight.js","hash":"00cec6980cafd417def885f496371856cd524a25","modified":1640838215918},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"1f1ea7b579a49f17574c31d78d663c54896133eb","modified":1640838215918},{"_id":"themes/next/scripts/events/lib/vendors.js","hash":"2f7057a8d3fce08aa7e2a17d7b7a1f03ac3d8ed6","modified":1640838215920},{"_id":"themes/next/scripts/events/lib/utils.js","hash":"8508e96a5f883a5a57d8c1b8b5ea438fa29aafd3","modified":1640838215919},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"cfff8331fdaa2ede4ab08c58cfc6d98c7d2374d9","modified":1640838215921},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1640838215922},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"1cb58aa6b88f7461c3c3f9605273686adcc30979","modified":1640838215923},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3283bdd6e5ac7d10376df8ddd5faaec5dc1bd667","modified":1640838215923},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"70eb507ef7f1a4fc3ca71a3814cc57afe7f3f60c","modified":1640838215924},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"96e58efba0dc76af409cc7d2db225f0fe4526ea8","modified":1640838215925},{"_id":"themes/next/scripts/filters/comment/isso.js","hash":"c22cbccd7d514947e084eeac6a3af1aa41ec857a","modified":1640838215925},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"bb8ebb541c40362c0cbbd8e83d3b777302bb6c40","modified":1640838215926},{"_id":"themes/next/scripts/filters/comment/utterances.js","hash":"a50718c081685fd35ff8ea9ca13682c284399ed8","modified":1640838215926},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"c4537fa2de33d98baff2c87a73801770414e0b69","modified":1640838216005},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"ee5024be8e39605f0c6d71db038e15e0693d0f41","modified":1640838216005},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"d3a8f6e71c86926d0c2a247a31d7446d829736d5","modified":1640838216006},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"58014a2d087c4126058a99b5b1cb7d8a2eb6224d","modified":1640838216007},{"_id":"themes/next/source/css/_variables/base.styl","hash":"0876b50a58f114bc0b7982b85c5e5011730253b8","modified":1640838216008},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e1b4bf9aa47d14c790a0920d7dbb3e9812d4358b","modified":1640838216024},{"_id":"themes/next/source/js/third-party/fancybox.js","hash":"8a847a7bbdbc0086dd1de12b82107a854b43f5e5","modified":1640838216047},{"_id":"themes/next/source/js/third-party/pace.js","hash":"0ebee77b2307bf4b260afb06c060171ef42b7141","modified":1640838216049},{"_id":"themes/next/source/js/third-party/quicklink.js","hash":"539c5bb51244f7f4aa98884f3229d128c1cefc40","modified":1640838216050},{"_id":"themes/next/source/js/third-party/rating.js","hash":"a1f44247c18ac00ee3e0026560398429e4c77dd7","modified":1640838216050},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"2bbf9046ef2a8f99ef3668bbb8be4e52e9d97bb7","modified":1640838215944},{"_id":"themes/next/source/css/_common/components/index.styl","hash":"991c1f80995cec418dc00d3d6b13e2d911ac9894","modified":1640838215944},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"f3defd56be33dba4866a695396d96c767ce63182","modified":1640838215954},{"_id":"themes/next/source/css/_common/outline/index.styl","hash":"7782dfae7a0f8cd61b936fa8ac980440a7bbd3bb","modified":1640838215964},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"1239f1b432a6932b2bb9ebcfbaabf724b8f4e59a","modified":1640838215972},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"f768ecb2fe3e9384777c1c115cd7409e9155edd7","modified":1640838215972},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"2db4462e9cb87b8aef3f50f850fed407de16da3e","modified":1640838215965},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"cf8446f4378dcab27b55ede1635c608ae6b8a5c8","modified":1640838215973},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1640838215976},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"34416a5792d0235caa8c0c7e59725f2df0fa614c","modified":1640838215977},{"_id":"themes/next/source/css/_common/scaffolding/index.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1640838215976},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b9388016f8d9274703e77e306a1feaad1b7b9d6c","modified":1640838215978},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"90f7d3baab061e860172b536c9edc38c7fd2ef5c","modified":1640838215986},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"f51b6a4f06359ed56b2d10caa6f15362d3b3751d","modified":1640838215989},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b1054313ca9419e76fea0451417c881616f50a38","modified":1640838215990},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"00366a6bd1a66f99f845c5ebfc9e8cf56651b815","modified":1640838215990},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"f337981f8f20944ed366694aea88146c7b0a13ab","modified":1640838215991},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"c9a9e07b721bb2376e24753ae0a9452431439114","modified":1640838215991},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"89bf3f6b82cb0fafbbd483431df8f450857c5a0b","modified":1640838215992},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"fd89988442f380cba907752fe3f608e3498f8c93","modified":1640838215993},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"28030c61288cc0e1321b18373a5c79029fd76a53","modified":1640838215995},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"018b6a761e197086174c9f06b4d5ea21cc230951","modified":1640838215994},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"134272cb8096156c9e32fbbe085394633c7509cd","modified":1640838215996},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1640838215996},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"9b2cba0c9aa5a64957294f7548c199db1f63f0f4","modified":1640838215999},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"9f60d501808f67d151af437221d0dfacc27c180c","modified":1640838216000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1640838215997},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1d29eca70fa686d895f8e98a283e4a159e40905a","modified":1640838216000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"42bf453def88da82c842dca84e8f47087091f08e","modified":1640838216002},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5c3dd08c520a16ee49f85fa12b4935e725ef261","modified":1640838216002},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"7905f428b46d100ac5928875cb1e2b99fa86fc0b","modified":1640838216003},{"_id":"themes/next/source/js/third-party/analytics/baidu-analytics.js","hash":"f9579a02599de063ccff336177ba964a2931a6e9","modified":1640838216025},{"_id":"themes/next/source/js/third-party/analytics/google-analytics.js","hash":"d77d4934d959e7125128754b568f1d041c3fbfff","modified":1640838216026},{"_id":"themes/next/source/js/third-party/analytics/growingio.js","hash":"f755e8537ccbbb0bd84c26923f320d4e206e7428","modified":1640838216027},{"_id":"themes/next/source/js/third-party/chat/chatra.js","hash":"72e0766752b78a723fb30e92d533a8b353104e2d","modified":1640838216028},{"_id":"themes/next/source/js/third-party/chat/gitter.js","hash":"14b024c920a8b359777d79dd8e1a849387f8f3ad","modified":1640838216029},{"_id":"themes/next/source/js/third-party/chat/tidio.js","hash":"77c231bcd64f1c09bd9989909e9fee703b65f47f","modified":1640838216029},{"_id":"themes/next/source/js/third-party/comments/changyan.js","hash":"b1dd519dc3b1153c9d2ba2d35f68ca8f73f33bae","modified":1640838216044},{"_id":"themes/next/source/js/third-party/comments/disqus.js","hash":"5460de247c038d6cfbe774d7f8747f0a958d9017","modified":1640838216044},{"_id":"themes/next/source/js/third-party/comments/disqusjs.js","hash":"1c282d6c2151346d1f0aa95055d17abe77054ec9","modified":1640838216045},{"_id":"themes/next/source/js/third-party/comments/gitalk.js","hash":"1e8509356fb027d948d118ab220d9631f4d482fa","modified":1640838216045},{"_id":"themes/next/source/js/third-party/comments/isso.js","hash":"b9b9fd2f0e098a123b34a4932da912a9485ffe6c","modified":1640838216046},{"_id":"themes/next/source/js/third-party/math/katex.js","hash":"5c63ec71458b4fe0cd98fd4a04e11c3746764f11","modified":1640838216048},{"_id":"themes/next/source/js/third-party/comments/livere.js","hash":"68892d74ef5fc308c6e7e6b4f190826d79f3055d","modified":1640838216046},{"_id":"themes/next/source/js/third-party/math/mathjax.js","hash":"d93556184b2c0aa1dbc4a6fb892d2f77b80d7d9f","modified":1640838216049},{"_id":"themes/next/source/js/third-party/comments/utterances.js","hash":"ec44d7f1c8b51b0aa3cccba099a78f3575ac828c","modified":1640838216047},{"_id":"themes/next/source/js/third-party/statistics/firestore.js","hash":"d0829fe41d2fe86b8499e2a896556c1275ea0066","modified":1640838216053},{"_id":"themes/next/source/js/third-party/search/algolia-search.js","hash":"ea94731438d8c518d946601f8f46a65b92381fac","modified":1640838216051},{"_id":"themes/next/source/js/third-party/search/local-search.js","hash":"dc2b0e89aa32afc7f7a7e2d7a277dadb7f96e06d","modified":1640838216052},{"_id":"themes/next/source/js/third-party/statistics/lean-analytics.js","hash":"6abdc209f4503d4efd676e18bc30ddea813b6ff9","modified":1640838216053},{"_id":"themes/next/source/js/third-party/tags/mermaid.js","hash":"2618135cbcee6bf228f6734767de1995e5eaaac6","modified":1640838216054},{"_id":"themes/next/source/js/third-party/tags/pdf.js","hash":"e109c2d6828f527f0289d5fa3bb02fce63ee6d93","modified":1640838216054},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fde10ce94e9ae21a03b60d41d532835b54abdcb1","modified":1640838215946},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"80595d274f593b321c0b644a06f3165fe07b16f5","modified":1640838215946},{"_id":"themes/next/source/css/_common/components/pages/index.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1640838215946},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"091b8c763e43447d087c122a86538f290f83136a","modified":1640838215947},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"56d719bcdcba3d725141c55bbd4b168f3942f912","modified":1640838215948},{"_id":"themes/next/source/css/_common/outline/footer/index.styl","hash":"02b6d1a53f7a02c6b0929b11f3ab904b5b873a0e","modified":1640838215960},{"_id":"themes/next/source/css/_common/components/post/index.styl","hash":"df2fbd0ada00f37439b0de965c6f1c29d3c97429","modified":1640838215948},{"_id":"themes/next/source/css/_common/components/post/post-body.styl","hash":"7a34d020877273dcf11c25fa481409300efb8659","modified":1640838215949},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"eebe3013a9a976011570dce2d04dfeae4c31d790","modified":1640838215949},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"791bc9befb0d4d06e3e517eccfe0bc3551a02a60","modified":1640838215950},{"_id":"themes/next/source/css/_common/components/post/post-footer.styl","hash":"e53a5eb1d1771e284044bdb0bc0ed2de27923669","modified":1640838215951},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"4d29b6ae7ed3dc44b10df851a4128b6441efa8be","modified":1640838215952},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"69dff7cf231d01f85671758455726dd666664a73","modified":1640838215952},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"c34936a17c3d8af6c0988ac6746d7509dc0b50eb","modified":1640838215951},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"9043d9bc2db35ca000c79258ef89fdb161dc43fb","modified":1640838215953},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"0a779f955a0e25df0852e0731517dadb234aa181","modified":1640838215953},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"c8648c8ea3105556be0068d9fb2735261d0d94bc","modified":1640838215961},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"05af22f3edc2383a3d97ec4c05e9ac43b014bead","modified":1640838215962},{"_id":"themes/next/source/css/_common/outline/header/index.styl","hash":"67fc7a1eb59c8451eec34e572cbb2fd1424757bc","modified":1640838215963},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"2db695204d39e4c7daa7b91585a0ea4b06b49f11","modified":1640838215963},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"86b0925e968f35bbc76b473a861e8f9797f7580e","modified":1640838215963},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"d9bc2b520636b9df7f946295cd430593df4118ff","modified":1640838215964},{"_id":"themes/next/source/css/_common/components/third-party/disqusjs.styl","hash":"c1e9edbfd1c3696b35d5452ae2e6d766f3fe91aa","modified":1640838215955},{"_id":"themes/next/source/css/_common/components/third-party/index.styl","hash":"25ea9a0af888355b3a046db1100b5cb0e2d6ef6e","modified":1640838215956},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"fb165c1a0d990c5cf98b87773e0dc50410229b96","modified":1640838215955},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"0527153aa821bdbdb84c7b47f60e3cefd95a742f","modified":1640838215957},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"1e5776ad4c5c8bcf7596ac74dcabc30704b3f5a0","modified":1640838215957},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"49c26184580fde8a732899a4de5aae8662e289b8","modified":1640838215957},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"a4003e1408844568cb5102a5a111046cb19b2d31","modified":1640838215974},{"_id":"themes/next/source/css/_common/components/third-party/utterances.styl","hash":"d28856f365a9373c4ae6fe1e5673d63df2dfd65f","modified":1640838215958},{"_id":"themes/next/source/css/_common/scaffolding/highlight/index.styl","hash":"ee05c1d00bc38397bd320128bbe15d05d9100039","modified":1640838215975},{"_id":"themes/next/source/css/_common/outline/sidebar/index.styl","hash":"9964a96f9a647cfb16b97679eced79d07e084e6d","modified":1640838215966},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2c2bfbc34b6f19d262ae7c041474985e12f4f4ad","modified":1640838215967},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"d8a028f532d562e6a86bb3b9c7b992e4b6dbbb51","modified":1640838215967},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"1c324d56ae83e96db2c4c6d63edd7ee51c936fc1","modified":1640838215967},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"63d8f5f169c2b1c969928fc79244c5fe89ee484e","modified":1640838215968},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"57ed6770535ecb2e6485a0c87d4de6d6476368b9","modified":1640838215968},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"081345490271840855d1238b969dbf2e0a2bba8f","modified":1640838215970},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"db4f3263b2b6551dd56bfdf33cceaf81661a3611","modified":1640838215969},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2de038def2cb91da143b14696366c14a66e0e569","modified":1640838215971},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"6681ffe283f8a7e3c86310ef4f6ca1e499c1a19f","modified":1640838215970},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"6b3680e0dbea8e14c1cec24ef63b7fae5e37f7ef","modified":1640838215979},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"8d9218980e185210ce034e9769ab639b9630fd88","modified":1640838215980},{"_id":"themes/next/source/css/_common/scaffolding/tags/index.styl","hash":"e22fde6f1657d311d46f64d868c4491d535c8caa","modified":1640838215981},{"_id":"themes/next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7075dd32dd70da1e161e4bd14b46f1e8be62fa3c","modified":1640838215982},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"531daf2612c6217950677a2d03924459ce57c291","modified":1640838215982},{"_id":"themes/next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"c7754dc6c866928b538f0863a05b96ec44b5e986","modified":1640838215983},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"2e9dc3b3546e19e9de18050ad04b1741841116bc","modified":1640838215984},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"77122986509a6b4968bae2729417b7016137534c","modified":1640838215985},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"40a38f2129617ffd4e8d5cd78e982fdfc9941acf","modified":1640838215985},{"_id":"public/index.html","hash":"9592584c4d7c9b94276a02ec0c33430086be95ec","modified":1641816775253},{"_id":"public/about/index.html","hash":"65f57219284aeb21d93e25898c8d5982c64f6244","modified":1641816775253},{"_id":"public/categories/index.html","hash":"def092823cd4a7429390aeef2a30dfab7317b6b5","modified":1641816775253},{"_id":"public/tags/index.html","hash":"d3393ba517e88673104426b9369012b813ee1952","modified":1641816775253},{"_id":"public/2022/01/10/pulsar调研/index.html","hash":"8bc4752a059026f9246d6dc34d4048b777894358","modified":1641816775253},{"_id":"public/2021/12/29/java注解/index.html","hash":"4f1f0445d15fb42ebb8cfa2031157bdd9cc220aa","modified":1641816775253},{"_id":"public/2021/12/29/hello-world/index.html","hash":"6e48738405c59046e35659ce0116b4056b36b20f","modified":1641816775253},{"_id":"public/2021/12/08/会计学基础/index.html","hash":"e24f0b386b901857652c57d371ce8ebdc5682377","modified":1641816775253},{"_id":"public/2021/11/14/明史人物记录/index.html","hash":"31e0298322e26b1814ddbe3017287df4eefe921b","modified":1641816775253},{"_id":"public/2021/11/14/shell脚本入门/index.html","hash":"b8be1b227778ebe1641b1ae657f2db29c3495fe0","modified":1641816775253},{"_id":"public/2021/11/11/java接口/index.html","hash":"eb59a6c749350b4b9699ecaa61ad1070c3515beb","modified":1641816775253},{"_id":"public/2021/11/10/typora常用命令记录/index.html","hash":"d25be1bc3c4c7ce39786804039e609494d36822b","modified":1641816775253},{"_id":"public/2021/11/06/Integer-valueOf和Integer-parseInt/index.html","hash":"b66fcee4f7e08fff145a7c99aeb9c552085c9312","modified":1641816775253},{"_id":"public/2021/11/02/初识hexo/index.html","hash":"3cd4dabb2c70454b11f83da15ec5ac50d3373be3","modified":1641816775253},{"_id":"public/archives/index.html","hash":"eadb82ba308fe8084683c3a9ab275a75174d057b","modified":1641816775253},{"_id":"public/archives/page/2/index.html","hash":"8c5b26d77e6d8f3c1f28908475f95f079128832f","modified":1641816775253},{"_id":"public/archives/2021/index.html","hash":"5c8739aa15c68563d678bd73138ecaa230cadf89","modified":1641816775253},{"_id":"public/archives/2021/11/index.html","hash":"bc19319d11b622c3dd9ab661deae25c44318a7e5","modified":1641816775253},{"_id":"public/archives/2021/12/index.html","hash":"4a1ce625426b16a014c20dd0bbd2a1dc7eabd37c","modified":1641816775253},{"_id":"public/archives/2022/index.html","hash":"c9ecaa32c8dbc1861f6c7fbdf867361821a8d65f","modified":1641816775253},{"_id":"public/archives/2022/01/index.html","hash":"2edd7ab211aee8cdb4a563e50c7e9daebe9ecabe","modified":1641816775253},{"_id":"public/categories/java基础/index.html","hash":"5c6f4075c7296a9d8acbd534933dd2d2b3ab83a4","modified":1641816775253},{"_id":"public/categories/技术/index.html","hash":"866355521417d1d22d472087dc781ba5f4b07d1f","modified":1641816775253},{"_id":"public/categories/脚本学习/index.html","hash":"3a11adf41dbf7ef5d5fbf7055d7178e625f64061","modified":1641816775253},{"_id":"public/categories/会计学/index.html","hash":"48aadad19babc54af43fe95ae62d6f1ebc0fad01","modified":1641816775253},{"_id":"public/categories/算法/index.html","hash":"82843ec35e52e0486a19e8e72c50a1a151d66c91","modified":1641816775253},{"_id":"public/categories/阅读笔记/index.html","hash":"f2e91865a503c0bb26994dc8fe7d765817964a6c","modified":1641816775253},{"_id":"public/default-index/page/2/index.html","hash":"5bc41b494bb7a5015e1c7f790304cc5d86d70b27","modified":1641816775253},{"_id":"public/2021/11/08/动态规划/index.html","hash":"f12b761eb19be811c15685330ad33a6aa34bba52","modified":1641816775253},{"_id":"public/default-index/index.html","hash":"1fe5f71511e1f9c5d8e7210ad17e938a6fc2a387","modified":1641816775253},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1641816775253},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1641816775253},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1641816775253},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1641816775253},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1641816775253},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1641816775253},{"_id":"public/css/noscript.css","hash":"54d14cd43dc297950a4a8d39ec9644dd5fc3499f","modified":1641816775253},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1641816775253},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1641816775253},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1641816775253},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1641816775253},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1641816775253},{"_id":"public/js/next-boot.js","hash":"48497e2156a10155dc42311633a110c9685692c9","modified":1641816775253},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1641816775253},{"_id":"public/js/schedule.js","hash":"2b43e2d576a308289880befc27580dbb2aa34439","modified":1641816775253},{"_id":"public/js/utils.js","hash":"e447160d342b1f93df5214b6a733441039ced439","modified":1641816775253},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1641816775253},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1641816775253},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1641816775253},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1641816775253},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1641816775253},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1641816775253},{"_id":"public/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":1641816775253},{"_id":"public/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1641816775253},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1641816775253},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1641816775253},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1641816775253},{"_id":"public/js/schemes/muse.js","hash":"9a836d2bcc3defe4bd1ee51f5f4eb7006ebdd41b","modified":1641816775253},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1641816775253},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1641816775253},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1641816775253},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1641816775253},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1641816775253},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1641816775253},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1641816775253},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1641816775253},{"_id":"public/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1641816775253},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1641816775253},{"_id":"public/js/third-party/search/local-search.js","hash":"45c485f82258d246f37deb66884bd2643323ef3a","modified":1641816775253},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1641816775253},{"_id":"public/js/third-party/tags/mermaid.js","hash":"3dc4628efa6debd6490fc0ebddff2424a7b319d8","modified":1641816775253},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1641816775253},{"_id":"public/css/main.css","hash":"6c8676907a21fc510049448cd7af0926846668fd","modified":1641816775253}],"Category":[{"name":"java基础","_id":"cky8nbg840004u8vxb1an9v57"},{"name":"技术","_id":"cky8nbg8h000eu8vx0274a6ex"},{"name":"脚本学习","_id":"cky8nbg8n000lu8vx99yi5d9l"},{"name":"会计学","_id":"cky8nbg8p000ou8vx8jixavh0"},{"name":"算法","_id":"cky8nbg8p000ru8vxgjbadgdu"},{"name":"阅读笔记","_id":"cky8nbg8w000vu8vx6zzg8e7m"}],"Data":[],"Page":[{"_content":"这是我的个人博客。我会在这里分享一些技术博客和个人感悟。","source":"index.md","raw":"这是我的个人博客。我会在这里分享一些技术博客和个人感悟。","date":"2022-01-10T12:11:19.735Z","updated":"2022-01-10T12:11:19.735Z","path":"index.html","title":"","comments":1,"layout":"page","_id":"cky8nbg7r0000u8vxa3cgavi0","content":"<p>这是我的个人博客。我会在这里分享一些技术博客和个人感悟。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>这是我的个人博客。我会在这里分享一些技术博客和个人感悟。</p>\n"},{"title":"about","date":"2022-01-10T10:54:24.000Z","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-01-10 18:54:24\ntype: \"about\"\n---\n","updated":"2022-01-10T10:55:39.693Z","path":"about/index.html","comments":1,"layout":"page","_id":"cky8nbg810002u8vxaa5o097g","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2022-01-10T10:54:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-10 18:54:54\ntype: \"categories\"\n---\n","updated":"2022-01-10T10:56:38.261Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cky8nbg860005u8vx8zdw98wj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2022-01-10T10:54:43.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-01-10 18:54:43\ntype: \"tags\"\n---\n","updated":"2022-01-10T10:57:03.987Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cky8nbg890007u8vxhxreet09","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Integer.valueOf和Integer.parseInt","date":"2021-11-06T08:37:17.000Z","_content":"\n## 1、Integer.valueOf\n\nInteger.valueOf有三个构造方法，分别是Integer.valueOf(int i)、Integer.valueOf(String s)和Integer.valueOf(String s,int radix)。\n\n<!--more-->\n\n需要注意的有两点：\n\n1） Integer.valueOf返回的是包装类Integer，即返回的是一个数字对象，其内部实际上调用了Integer.parseInt，这个很多博客中都有说到。\n\n2） Integer.valueOf(int i)这个方法不仅可以传入int类型的数字，还可以传入char类型的字符，当传入的是char时，返回的是char的ascii码值，例如：\n\n```java\nSystem.out.println(Integer.valueOf('a'));\n// 输出结果为a的ascii码值97\n```\n\n## 2、Integer.parseInt\n\nInteger.parseInt有两个构造方法，分别是Integer.parseInt(String s)和Integer.parseInt(String,int radix)，用于将字符串转换为数字。","source":"_posts/Integer-valueOf和Integer-parseInt.md","raw":"---\ntitle: Integer.valueOf和Integer.parseInt\ndate: 2021-11-06 16:37:17\ncategories: \n- java基础\ntags:\n---\n\n## 1、Integer.valueOf\n\nInteger.valueOf有三个构造方法，分别是Integer.valueOf(int i)、Integer.valueOf(String s)和Integer.valueOf(String s,int radix)。\n\n<!--more-->\n\n需要注意的有两点：\n\n1） Integer.valueOf返回的是包装类Integer，即返回的是一个数字对象，其内部实际上调用了Integer.parseInt，这个很多博客中都有说到。\n\n2） Integer.valueOf(int i)这个方法不仅可以传入int类型的数字，还可以传入char类型的字符，当传入的是char时，返回的是char的ascii码值，例如：\n\n```java\nSystem.out.println(Integer.valueOf('a'));\n// 输出结果为a的ascii码值97\n```\n\n## 2、Integer.parseInt\n\nInteger.parseInt有两个构造方法，分别是Integer.parseInt(String s)和Integer.parseInt(String,int radix)，用于将字符串转换为数字。","slug":"Integer-valueOf和Integer-parseInt","published":1,"updated":"2022-01-10T11:06:22.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg7w0001u8vx1n6edsfh","content":"<h2 id=\"1、Integer-valueOf\"><a href=\"#1、Integer-valueOf\" class=\"headerlink\" title=\"1、Integer.valueOf\"></a>1、Integer.valueOf</h2><p>Integer.valueOf有三个构造方法，分别是Integer.valueOf(int i)、Integer.valueOf(String s)和Integer.valueOf(String s,int radix)。</p>\n<span id=\"more\"></span>\n\n<p>需要注意的有两点：</p>\n<p>1） Integer.valueOf返回的是包装类Integer，即返回的是一个数字对象，其内部实际上调用了Integer.parseInt，这个很多博客中都有说到。</p>\n<p>2） Integer.valueOf(int i)这个方法不仅可以传入int类型的数字，还可以传入char类型的字符，当传入的是char时，返回的是char的ascii码值，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(Integer.valueOf(<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\"><span class=\"comment\">// 输出结果为a的ascii码值97</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、Integer-parseInt\"><a href=\"#2、Integer-parseInt\" class=\"headerlink\" title=\"2、Integer.parseInt\"></a>2、Integer.parseInt</h2><p>Integer.parseInt有两个构造方法，分别是Integer.parseInt(String s)和Integer.parseInt(String,int radix)，用于将字符串转换为数字。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"1、Integer-valueOf\"><a href=\"#1、Integer-valueOf\" class=\"headerlink\" title=\"1、Integer.valueOf\"></a>1、Integer.valueOf</h2><p>Integer.valueOf有三个构造方法，分别是Integer.valueOf(int i)、Integer.valueOf(String s)和Integer.valueOf(String s,int radix)。</p>","more":"<p>需要注意的有两点：</p>\n<p>1） Integer.valueOf返回的是包装类Integer，即返回的是一个数字对象，其内部实际上调用了Integer.parseInt，这个很多博客中都有说到。</p>\n<p>2） Integer.valueOf(int i)这个方法不仅可以传入int类型的数字，还可以传入char类型的字符，当传入的是char时，返回的是char的ascii码值，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(Integer.valueOf(<span class=\"string\">&#x27;a&#x27;</span>));</span><br><span class=\"line\"><span class=\"comment\">// 输出结果为a的ascii码值97</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、Integer-parseInt\"><a href=\"#2、Integer-parseInt\" class=\"headerlink\" title=\"2、Integer.parseInt\"></a>2、Integer.parseInt</h2><p>Integer.parseInt有两个构造方法，分别是Integer.parseInt(String s)和Integer.parseInt(String,int radix)，用于将字符串转换为数字。</p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n<!--more-->\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-12-29T11:38:41.581Z","updated":"2021-11-02T05:31:44.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg820003u8vxdnuodb00","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><span id=\"more\"></span>\n\n<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2>","more":"<h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"java接口","date":"2021-11-11T15:04:49.000Z","_content":"\n## 1、修饰符\n\n接口前加上public，则可以被所有类继承；若不显示添加public修饰符，则只能被同一个包中的类继承。\n\n## 2、抽象方法\n\n抽象方法可以继承接口，但是可以不用像普通类一样实现这些接口，即可以只实现接口中的部分方法。\n\n## 3、接口方法\n\n接口中的方法都是public abstract类型的，因此对于一个接口可以不用显示地写出public和abstract两个修饰符。\n\n## 4、常量\n\n接口中不能拥有变量，但是可以拥有常量，且这些常量前地修饰符为public、final、static，这几个修饰符默认不用写。\n\n## 5、接口回调\n\n接口回调是指让接口调用实现类的方法。举个例子。\n\n```java\npublic interface Hello {\n    String sayHello(String str);\n}\n\npublic class HelloImpl(String str) implements Hello {\n    @Override\n    public String sayHello(String str) {\n        System.out.println(str);\n    }\n}\n\nHello hello = new HelloImpl();\nhello.sayHello(\"hello world!\");\n```\n\n回调指的是Hello hello = new HelloImpl();这一行代码，我们在开发的过程中经常会用到接口回调，我们可以把hello看作一个指针，指向了实例对象HelloImpl，接着就可以操作HelloImpl对象的各个方法了。","source":"_posts/java接口.md","raw":"---\ntitle: java接口\ndate: 2021-11-11 23:04:49\ncategories:\n- java基础\ntags:\n---\n\n## 1、修饰符\n\n接口前加上public，则可以被所有类继承；若不显示添加public修饰符，则只能被同一个包中的类继承。\n\n## 2、抽象方法\n\n抽象方法可以继承接口，但是可以不用像普通类一样实现这些接口，即可以只实现接口中的部分方法。\n\n## 3、接口方法\n\n接口中的方法都是public abstract类型的，因此对于一个接口可以不用显示地写出public和abstract两个修饰符。\n\n## 4、常量\n\n接口中不能拥有变量，但是可以拥有常量，且这些常量前地修饰符为public、final、static，这几个修饰符默认不用写。\n\n## 5、接口回调\n\n接口回调是指让接口调用实现类的方法。举个例子。\n\n```java\npublic interface Hello {\n    String sayHello(String str);\n}\n\npublic class HelloImpl(String str) implements Hello {\n    @Override\n    public String sayHello(String str) {\n        System.out.println(str);\n    }\n}\n\nHello hello = new HelloImpl();\nhello.sayHello(\"hello world!\");\n```\n\n回调指的是Hello hello = new HelloImpl();这一行代码，我们在开发的过程中经常会用到接口回调，我们可以把hello看作一个指针，指向了实例对象HelloImpl，接着就可以操作HelloImpl对象的各个方法了。","slug":"java接口","published":1,"updated":"2022-01-10T11:10:47.729Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg870006u8vxd54xcofv","content":"<h2 id=\"1、修饰符\"><a href=\"#1、修饰符\" class=\"headerlink\" title=\"1、修饰符\"></a>1、修饰符</h2><p>接口前加上public，则可以被所有类继承；若不显示添加public修饰符，则只能被同一个包中的类继承。</p>\n<h2 id=\"2、抽象方法\"><a href=\"#2、抽象方法\" class=\"headerlink\" title=\"2、抽象方法\"></a>2、抽象方法</h2><p>抽象方法可以继承接口，但是可以不用像普通类一样实现这些接口，即可以只实现接口中的部分方法。</p>\n<h2 id=\"3、接口方法\"><a href=\"#3、接口方法\" class=\"headerlink\" title=\"3、接口方法\"></a>3、接口方法</h2><p>接口中的方法都是public abstract类型的，因此对于一个接口可以不用显示地写出public和abstract两个修饰符。</p>\n<h2 id=\"4、常量\"><a href=\"#4、常量\" class=\"headerlink\" title=\"4、常量\"></a>4、常量</h2><p>接口中不能拥有变量，但是可以拥有常量，且这些常量前地修饰符为public、final、static，这几个修饰符默认不用写。</p>\n<h2 id=\"5、接口回调\"><a href=\"#5、接口回调\" class=\"headerlink\" title=\"5、接口回调\"></a>5、接口回调</h2><p>接口回调是指让接口调用实现类的方法。举个例子。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Hello</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">sayHello</span><span class=\"params\">(String str)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> class <span class=\"title\">HelloImpl</span><span class=\"params\">(String str)</span> implements Hello </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sayHello</span><span class=\"params\">(String str)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Hello hello = <span class=\"keyword\">new</span> HelloImpl();</span><br><span class=\"line\">hello.sayHello(<span class=\"string\">&quot;hello world!&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>回调指的是Hello hello = new HelloImpl();这一行代码，我们在开发的过程中经常会用到接口回调，我们可以把hello看作一个指针，指向了实例对象HelloImpl，接着就可以操作HelloImpl对象的各个方法了。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、修饰符\"><a href=\"#1、修饰符\" class=\"headerlink\" title=\"1、修饰符\"></a>1、修饰符</h2><p>接口前加上public，则可以被所有类继承；若不显示添加public修饰符，则只能被同一个包中的类继承。</p>\n<h2 id=\"2、抽象方法\"><a href=\"#2、抽象方法\" class=\"headerlink\" title=\"2、抽象方法\"></a>2、抽象方法</h2><p>抽象方法可以继承接口，但是可以不用像普通类一样实现这些接口，即可以只实现接口中的部分方法。</p>\n<h2 id=\"3、接口方法\"><a href=\"#3、接口方法\" class=\"headerlink\" title=\"3、接口方法\"></a>3、接口方法</h2><p>接口中的方法都是public abstract类型的，因此对于一个接口可以不用显示地写出public和abstract两个修饰符。</p>\n<h2 id=\"4、常量\"><a href=\"#4、常量\" class=\"headerlink\" title=\"4、常量\"></a>4、常量</h2><p>接口中不能拥有变量，但是可以拥有常量，且这些常量前地修饰符为public、final、static，这几个修饰符默认不用写。</p>\n<h2 id=\"5、接口回调\"><a href=\"#5、接口回调\" class=\"headerlink\" title=\"5、接口回调\"></a>5、接口回调</h2><p>接口回调是指让接口调用实现类的方法。举个例子。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Hello</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">sayHello</span><span class=\"params\">(String str)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> class <span class=\"title\">HelloImpl</span><span class=\"params\">(String str)</span> implements Hello </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">sayHello</span><span class=\"params\">(String str)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Hello hello = <span class=\"keyword\">new</span> HelloImpl();</span><br><span class=\"line\">hello.sayHello(<span class=\"string\">&quot;hello world!&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>回调指的是Hello hello = new HelloImpl();这一行代码，我们在开发的过程中经常会用到接口回调，我们可以把hello看作一个指针，指向了实例对象HelloImpl，接着就可以操作HelloImpl对象的各个方法了。</p>\n"},{"title":"java注解","_content":"\n[TOC]\n\n## 1、概念\n\n> 定义：注解（Annotation），也叫元数据。一种代码级别的说明。它是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。 \n\n定义可能比较抽象，其实我们平时看到的@Override、@Deprecated 等都是注解，其中@Override表示这个方法是重写的方法，@Deprecated表示这个方法被弃用。\n\n除了这些java本身提供的一些注解，我们自己也可以自定义一些注解，下面举个例子。\n<!--more-->\n\n## 2、举个例子\n\n```java\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface InvokeLog {\n    String methodName () default \"\";\n}\n```\n\n上面的代码的意思是，我们定义了一个叫做InvokeLog的注解，以后这个注解就可以用在需要的方法上面了。我们需要关注的地方主要有三个。首先，我们定义的是一个注解，所以必须要有@interface注解，其他的注解都是可以省略的，其他的注解省略了就会使用默认的值。然后再来分析下比较重要的两个注解：@Target和@Retention\n\n@Target注解的作用是定义这个注解使用的范围，ElementType.METHOD表示这个注解使用在方法上面的，再比如ElementType.FIELD表示这个注解使用在成员变量上面的。\n\n@Retention注解的作用是定义这个注解起作用的范围，RetentionPolicy.RUNTIME表示这个注解在程序运行期间起作用，再比如RetentionPolicy.SOURCE表示这个注解只在编译期间起作用，编译完成之后就没用了。\n\n","source":"_posts/java注解.md","raw":"---\ntitle: java注解\ncategories: \n- java基础\n---\n\n[TOC]\n\n## 1、概念\n\n> 定义：注解（Annotation），也叫元数据。一种代码级别的说明。它是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。 \n\n定义可能比较抽象，其实我们平时看到的@Override、@Deprecated 等都是注解，其中@Override表示这个方法是重写的方法，@Deprecated表示这个方法被弃用。\n\n除了这些java本身提供的一些注解，我们自己也可以自定义一些注解，下面举个例子。\n<!--more-->\n\n## 2、举个例子\n\n```java\n@Target(ElementType.METHOD)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\npublic @interface InvokeLog {\n    String methodName () default \"\";\n}\n```\n\n上面的代码的意思是，我们定义了一个叫做InvokeLog的注解，以后这个注解就可以用在需要的方法上面了。我们需要关注的地方主要有三个。首先，我们定义的是一个注解，所以必须要有@interface注解，其他的注解都是可以省略的，其他的注解省略了就会使用默认的值。然后再来分析下比较重要的两个注解：@Target和@Retention\n\n@Target注解的作用是定义这个注解使用的范围，ElementType.METHOD表示这个注解使用在方法上面的，再比如ElementType.FIELD表示这个注解使用在成员变量上面的。\n\n@Retention注解的作用是定义这个注解起作用的范围，RetentionPolicy.RUNTIME表示这个注解在程序运行期间起作用，再比如RetentionPolicy.SOURCE表示这个注解只在编译期间起作用，编译完成之后就没用了。\n\n","slug":"java注解","published":1,"date":"2021-12-29T11:48:40.857Z","updated":"2022-01-10T11:07:19.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg890008u8vx0amqdin0","content":"<p>[TOC]</p>\n<h2 id=\"1、概念\"><a href=\"#1、概念\" class=\"headerlink\" title=\"1、概念\"></a>1、概念</h2><blockquote>\n<p>定义：注解（Annotation），也叫元数据。一种代码级别的说明。它是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。 </p>\n</blockquote>\n<p>定义可能比较抽象，其实我们平时看到的@Override、@Deprecated 等都是注解，其中@Override表示这个方法是重写的方法，@Deprecated表示这个方法被弃用。</p>\n<p>除了这些java本身提供的一些注解，我们自己也可以自定义一些注解，下面举个例子。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"2、举个例子\"><a href=\"#2、举个例子\" class=\"headerlink\" title=\"2、举个例子\"></a>2、举个例子</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(ElementType.METHOD)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> InvokeLog &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">methodName</span> <span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码的意思是，我们定义了一个叫做InvokeLog的注解，以后这个注解就可以用在需要的方法上面了。我们需要关注的地方主要有三个。首先，我们定义的是一个注解，所以必须要有@interface注解，其他的注解都是可以省略的，其他的注解省略了就会使用默认的值。然后再来分析下比较重要的两个注解：@Target和@Retention</p>\n<p>@Target注解的作用是定义这个注解使用的范围，ElementType.METHOD表示这个注解使用在方法上面的，再比如ElementType.FIELD表示这个注解使用在成员变量上面的。</p>\n<p>@Retention注解的作用是定义这个注解起作用的范围，RetentionPolicy.RUNTIME表示这个注解在程序运行期间起作用，再比如RetentionPolicy.SOURCE表示这个注解只在编译期间起作用，编译完成之后就没用了。</p>\n","site":{"data":{}},"excerpt":"<p>[TOC]</p>\n<h2 id=\"1、概念\"><a href=\"#1、概念\" class=\"headerlink\" title=\"1、概念\"></a>1、概念</h2><blockquote>\n<p>定义：注解（Annotation），也叫元数据。一种代码级别的说明。它是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。 </p>\n</blockquote>\n<p>定义可能比较抽象，其实我们平时看到的@Override、@Deprecated 等都是注解，其中@Override表示这个方法是重写的方法，@Deprecated表示这个方法被弃用。</p>\n<p>除了这些java本身提供的一些注解，我们自己也可以自定义一些注解，下面举个例子。</p>","more":"<h2 id=\"2、举个例子\"><a href=\"#2、举个例子\" class=\"headerlink\" title=\"2、举个例子\"></a>2、举个例子</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Target(ElementType.METHOD)</span></span><br><span class=\"line\"><span class=\"meta\">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class=\"line\"><span class=\"meta\">@Documented</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"meta\">@interface</span> InvokeLog &#123;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">methodName</span> <span class=\"params\">()</span> <span class=\"keyword\">default</span> &quot;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面的代码的意思是，我们定义了一个叫做InvokeLog的注解，以后这个注解就可以用在需要的方法上面了。我们需要关注的地方主要有三个。首先，我们定义的是一个注解，所以必须要有@interface注解，其他的注解都是可以省略的，其他的注解省略了就会使用默认的值。然后再来分析下比较重要的两个注解：@Target和@Retention</p>\n<p>@Target注解的作用是定义这个注解使用的范围，ElementType.METHOD表示这个注解使用在方法上面的，再比如ElementType.FIELD表示这个注解使用在成员变量上面的。</p>\n<p>@Retention注解的作用是定义这个注解起作用的范围，RetentionPolicy.RUNTIME表示这个注解在程序运行期间起作用，再比如RetentionPolicy.SOURCE表示这个注解只在编译期间起作用，编译完成之后就没用了。</p>"},{"title":"pulsar调研","date":"2022-01-10T10:54:43.000Z","type":null,"_content":"\n# pulsar调研\n\n1、pulsar单机部署\n\npulsar可以单机部署，单机部署包含一个pulsar broker，zookeeper和bookzeeper（中文意义：簿记员，记账员）。\n\n注意：pulsar默认需要2G的jvm堆内存，所以启动的时候可能会因为堆内存不够而无法启动，可以前往conf/pulsar_env.sh修改PULSAR_MEM这个参数。\n\n\n\n单机部署的时候，可以选择安装*builtin connectors* 和*tiered storage offloaders* ，这两个组件的具体作用后面再补充。这两个组件不是必须要安装的。\n\n\n\n启动pulsar后。可以生产和消费消息。需要注意的是，pulsar可以不用生产消息也可以消费消息，这句话的含义是，当你启动一个consumer去订阅一个topic并且消费消息的时候，如果provider并没有这个topic和相关的消息，生产者会主动创建一个topic，并产生消息，供消费者消费。\n\n+ 保证消息到达 [Apache BookKeeper](http://bookkeeper.apache.org/) ，持久化的消息存储\n+  [Pulsar Functions](https://pulsar.apache.org/docs/en/functions-overview)  轻量级计算框架，数据流处理\n+  [Pulsar IO](https://pulsar.apache.org/docs/en/io-overview) 处理数据的流入流出pulsar\n+ [Tiered Storage](https://pulsar.apache.org/docs/en/concepts-tiered-storage) 数据冷热数据转移\n\n\n\n## message\n\n生产者生产消息，消费者消费消息，消费者没消费一条消息，会向broker传递一个ack，表示该条消息已被消费。pulsar默认会保留所有的消息，只有当消费者将消息全部消费之后，pulsar才会删除这些消息。如果消费者消费消息失败，可以重试消费。\n\n\n\n| 元素                | 描述                                                         |\n| ------------------- | ------------------------------------------------------------ |\n| value/data payload  | 消息值                                                       |\n| key                 | 每条消息可以设置一个key值，可选                              |\n| properties          | key/value形式的map，用户自定义的属性map                      |\n| producer name       | 生产者名字，可选，不设定则为默认名                           |\n| sequence id         | 每一条消息都属于某个topic的一个有序的序列，sequence id表示该消息的序号 |\n| publish time        | 消息产生的时间，由生产者自动提供                             |\n| event time          | 应用标注的时间，个人理解为消息被消费的时间戳                 |\n| TypedMessageBuilder | 构造消息，具体用处后面再研究                                 |\n\n消息的默认大小为5M，也自定义大小。\n\n+ 在`broker.conf` file. \n\n  ```bash\n  # The max size of a message (in bytes).\n  maxMessageSize=5242880\n  ```\n\n  \n\n+ 在`bookkeeper.conf` file. \n\n  ```bash\n  # The max size of the netty frame (in bytes). Any messages received larger than this value are rejected. The default value is 5 MB.\n  nettyMaxFrameSizeBytes=5253120\n  ```\n\n  \n\n## Producers\n\nproducer生产某个topic的消息给broker，broker处理这些消息。\n\n消息发送模式分为异步和同步两种方式。\n\n| 模式 | 描述                                                         |\n| ---- | ------------------------------------------------------------ |\n| 同步 | 生产者将消息发送给broker之后，会同步等待broker返回一个ack，若未收到ack，则认为该消息发送失败。 |\n| 异步 | 生产者将消息发送给一个队列，然后立即返回，消息队列后台处理。若消息队列满了，则直接返回失败或者消息堵塞。消息队列大小可自定义。 |\n\n接入模式（access mode）\n\n对于生产者有多种接入模式\n\n| 接入模式         | 描述                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| shared           | 多个生产者可以将消息发送到同一个topic，这是默认模式          |\n| exclusive        | 只能一个生产者发布消息到某个topic，即独占该topic。其他生产者发布消息到该topic将会报错。当old生产者经历完一个网络分片之后将会被驱逐，然后选举一个新的生产者独占该topic。选举方式后续研究。 |\n| WaitForExclusive | 当一个topic被某个生产者独占的时候，新的生产者将等待一个pending时间，而不是直接报错，时间到了，选择一个producer独占该topic。 |\n\n## 消息压缩\n\n支持以下类型\n\n+ [LZ4](https://github.com/lz4/lz4)\n+ [ZLIB](https://zlib.net/)\n+ [ZSTD](https://facebook.github.io/zstd/)\n+ [SNAPPY](https://google.github.io/snappy/)\n\n## Batching\n\n消息可以一个批次一个批次地发送，提高发送的效率。\n\n## chunking\n\n当消息过大，可以分块发送，消费者收到这些chunk之后再组装成一条完整的消息。\n\n","source":"_posts/pulsar调研.md","raw":"---\ntitle: pulsar调研\ndate: 2022-01-10 18:54:43\ncategories: \n- 技术\ntype: \n---\n\n# pulsar调研\n\n1、pulsar单机部署\n\npulsar可以单机部署，单机部署包含一个pulsar broker，zookeeper和bookzeeper（中文意义：簿记员，记账员）。\n\n注意：pulsar默认需要2G的jvm堆内存，所以启动的时候可能会因为堆内存不够而无法启动，可以前往conf/pulsar_env.sh修改PULSAR_MEM这个参数。\n\n\n\n单机部署的时候，可以选择安装*builtin connectors* 和*tiered storage offloaders* ，这两个组件的具体作用后面再补充。这两个组件不是必须要安装的。\n\n\n\n启动pulsar后。可以生产和消费消息。需要注意的是，pulsar可以不用生产消息也可以消费消息，这句话的含义是，当你启动一个consumer去订阅一个topic并且消费消息的时候，如果provider并没有这个topic和相关的消息，生产者会主动创建一个topic，并产生消息，供消费者消费。\n\n+ 保证消息到达 [Apache BookKeeper](http://bookkeeper.apache.org/) ，持久化的消息存储\n+  [Pulsar Functions](https://pulsar.apache.org/docs/en/functions-overview)  轻量级计算框架，数据流处理\n+  [Pulsar IO](https://pulsar.apache.org/docs/en/io-overview) 处理数据的流入流出pulsar\n+ [Tiered Storage](https://pulsar.apache.org/docs/en/concepts-tiered-storage) 数据冷热数据转移\n\n\n\n## message\n\n生产者生产消息，消费者消费消息，消费者没消费一条消息，会向broker传递一个ack，表示该条消息已被消费。pulsar默认会保留所有的消息，只有当消费者将消息全部消费之后，pulsar才会删除这些消息。如果消费者消费消息失败，可以重试消费。\n\n\n\n| 元素                | 描述                                                         |\n| ------------------- | ------------------------------------------------------------ |\n| value/data payload  | 消息值                                                       |\n| key                 | 每条消息可以设置一个key值，可选                              |\n| properties          | key/value形式的map，用户自定义的属性map                      |\n| producer name       | 生产者名字，可选，不设定则为默认名                           |\n| sequence id         | 每一条消息都属于某个topic的一个有序的序列，sequence id表示该消息的序号 |\n| publish time        | 消息产生的时间，由生产者自动提供                             |\n| event time          | 应用标注的时间，个人理解为消息被消费的时间戳                 |\n| TypedMessageBuilder | 构造消息，具体用处后面再研究                                 |\n\n消息的默认大小为5M，也自定义大小。\n\n+ 在`broker.conf` file. \n\n  ```bash\n  # The max size of a message (in bytes).\n  maxMessageSize=5242880\n  ```\n\n  \n\n+ 在`bookkeeper.conf` file. \n\n  ```bash\n  # The max size of the netty frame (in bytes). Any messages received larger than this value are rejected. The default value is 5 MB.\n  nettyMaxFrameSizeBytes=5253120\n  ```\n\n  \n\n## Producers\n\nproducer生产某个topic的消息给broker，broker处理这些消息。\n\n消息发送模式分为异步和同步两种方式。\n\n| 模式 | 描述                                                         |\n| ---- | ------------------------------------------------------------ |\n| 同步 | 生产者将消息发送给broker之后，会同步等待broker返回一个ack，若未收到ack，则认为该消息发送失败。 |\n| 异步 | 生产者将消息发送给一个队列，然后立即返回，消息队列后台处理。若消息队列满了，则直接返回失败或者消息堵塞。消息队列大小可自定义。 |\n\n接入模式（access mode）\n\n对于生产者有多种接入模式\n\n| 接入模式         | 描述                                                         |\n| ---------------- | ------------------------------------------------------------ |\n| shared           | 多个生产者可以将消息发送到同一个topic，这是默认模式          |\n| exclusive        | 只能一个生产者发布消息到某个topic，即独占该topic。其他生产者发布消息到该topic将会报错。当old生产者经历完一个网络分片之后将会被驱逐，然后选举一个新的生产者独占该topic。选举方式后续研究。 |\n| WaitForExclusive | 当一个topic被某个生产者独占的时候，新的生产者将等待一个pending时间，而不是直接报错，时间到了，选择一个producer独占该topic。 |\n\n## 消息压缩\n\n支持以下类型\n\n+ [LZ4](https://github.com/lz4/lz4)\n+ [ZLIB](https://zlib.net/)\n+ [ZSTD](https://facebook.github.io/zstd/)\n+ [SNAPPY](https://google.github.io/snappy/)\n\n## Batching\n\n消息可以一个批次一个批次地发送，提高发送的效率。\n\n## chunking\n\n当消息过大，可以分块发送，消费者收到这些chunk之后再组装成一条完整的消息。\n\n","slug":"pulsar调研","published":1,"updated":"2022-01-10T11:33:54.495Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8b0009u8vx43qx6pja","content":"<h1 id=\"pulsar调研\"><a href=\"#pulsar调研\" class=\"headerlink\" title=\"pulsar调研\"></a>pulsar调研</h1><p>1、pulsar单机部署</p>\n<p>pulsar可以单机部署，单机部署包含一个pulsar broker，zookeeper和bookzeeper（中文意义：簿记员，记账员）。</p>\n<p>注意：pulsar默认需要2G的jvm堆内存，所以启动的时候可能会因为堆内存不够而无法启动，可以前往conf/pulsar_env.sh修改PULSAR_MEM这个参数。</p>\n<p>单机部署的时候，可以选择安装<em>builtin connectors</em> 和<em>tiered storage offloaders</em> ，这两个组件的具体作用后面再补充。这两个组件不是必须要安装的。</p>\n<p>启动pulsar后。可以生产和消费消息。需要注意的是，pulsar可以不用生产消息也可以消费消息，这句话的含义是，当你启动一个consumer去订阅一个topic并且消费消息的时候，如果provider并没有这个topic和相关的消息，生产者会主动创建一个topic，并产生消息，供消费者消费。</p>\n<ul>\n<li>保证消息到达 <a href=\"http://bookkeeper.apache.org/\">Apache BookKeeper</a> ，持久化的消息存储</li>\n<li> <a href=\"https://pulsar.apache.org/docs/en/functions-overview\">Pulsar Functions</a>  轻量级计算框架，数据流处理</li>\n<li> <a href=\"https://pulsar.apache.org/docs/en/io-overview\">Pulsar IO</a> 处理数据的流入流出pulsar</li>\n<li><a href=\"https://pulsar.apache.org/docs/en/concepts-tiered-storage\">Tiered Storage</a> 数据冷热数据转移</li>\n</ul>\n<h2 id=\"message\"><a href=\"#message\" class=\"headerlink\" title=\"message\"></a>message</h2><p>生产者生产消息，消费者消费消息，消费者没消费一条消息，会向broker传递一个ack，表示该条消息已被消费。pulsar默认会保留所有的消息，只有当消费者将消息全部消费之后，pulsar才会删除这些消息。如果消费者消费消息失败，可以重试消费。</p>\n<table>\n<thead>\n<tr>\n<th>元素</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value/data payload</td>\n<td>消息值</td>\n</tr>\n<tr>\n<td>key</td>\n<td>每条消息可以设置一个key值，可选</td>\n</tr>\n<tr>\n<td>properties</td>\n<td>key/value形式的map，用户自定义的属性map</td>\n</tr>\n<tr>\n<td>producer name</td>\n<td>生产者名字，可选，不设定则为默认名</td>\n</tr>\n<tr>\n<td>sequence id</td>\n<td>每一条消息都属于某个topic的一个有序的序列，sequence id表示该消息的序号</td>\n</tr>\n<tr>\n<td>publish time</td>\n<td>消息产生的时间，由生产者自动提供</td>\n</tr>\n<tr>\n<td>event time</td>\n<td>应用标注的时间，个人理解为消息被消费的时间戳</td>\n</tr>\n<tr>\n<td>TypedMessageBuilder</td>\n<td>构造消息，具体用处后面再研究</td>\n</tr>\n</tbody></table>\n<p>消息的默认大小为5M，也自定义大小。</p>\n<ul>\n<li><p>在<code>broker.conf</code> file. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The max size of a message (in bytes).</span></span><br><span class=\"line\">maxMessageSize=5242880</span><br></pre></td></tr></table></figure></li>\n<li><p>在<code>bookkeeper.conf</code> file. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The max size of the netty frame (in bytes). Any messages received larger than this value are rejected. The default value is 5 MB.</span></span><br><span class=\"line\">nettyMaxFrameSizeBytes=5253120</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Producers\"><a href=\"#Producers\" class=\"headerlink\" title=\"Producers\"></a>Producers</h2><p>producer生产某个topic的消息给broker，broker处理这些消息。</p>\n<p>消息发送模式分为异步和同步两种方式。</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>同步</td>\n<td>生产者将消息发送给broker之后，会同步等待broker返回一个ack，若未收到ack，则认为该消息发送失败。</td>\n</tr>\n<tr>\n<td>异步</td>\n<td>生产者将消息发送给一个队列，然后立即返回，消息队列后台处理。若消息队列满了，则直接返回失败或者消息堵塞。消息队列大小可自定义。</td>\n</tr>\n</tbody></table>\n<p>接入模式（access mode）</p>\n<p>对于生产者有多种接入模式</p>\n<table>\n<thead>\n<tr>\n<th>接入模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>shared</td>\n<td>多个生产者可以将消息发送到同一个topic，这是默认模式</td>\n</tr>\n<tr>\n<td>exclusive</td>\n<td>只能一个生产者发布消息到某个topic，即独占该topic。其他生产者发布消息到该topic将会报错。当old生产者经历完一个网络分片之后将会被驱逐，然后选举一个新的生产者独占该topic。选举方式后续研究。</td>\n</tr>\n<tr>\n<td>WaitForExclusive</td>\n<td>当一个topic被某个生产者独占的时候，新的生产者将等待一个pending时间，而不是直接报错，时间到了，选择一个producer独占该topic。</td>\n</tr>\n</tbody></table>\n<h2 id=\"消息压缩\"><a href=\"#消息压缩\" class=\"headerlink\" title=\"消息压缩\"></a>消息压缩</h2><p>支持以下类型</p>\n<ul>\n<li><a href=\"https://github.com/lz4/lz4\">LZ4</a></li>\n<li><a href=\"https://zlib.net/\">ZLIB</a></li>\n<li><a href=\"https://facebook.github.io/zstd/\">ZSTD</a></li>\n<li><a href=\"https://google.github.io/snappy/\">SNAPPY</a></li>\n</ul>\n<h2 id=\"Batching\"><a href=\"#Batching\" class=\"headerlink\" title=\"Batching\"></a>Batching</h2><p>消息可以一个批次一个批次地发送，提高发送的效率。</p>\n<h2 id=\"chunking\"><a href=\"#chunking\" class=\"headerlink\" title=\"chunking\"></a>chunking</h2><p>当消息过大，可以分块发送，消费者收到这些chunk之后再组装成一条完整的消息。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"pulsar调研\"><a href=\"#pulsar调研\" class=\"headerlink\" title=\"pulsar调研\"></a>pulsar调研</h1><p>1、pulsar单机部署</p>\n<p>pulsar可以单机部署，单机部署包含一个pulsar broker，zookeeper和bookzeeper（中文意义：簿记员，记账员）。</p>\n<p>注意：pulsar默认需要2G的jvm堆内存，所以启动的时候可能会因为堆内存不够而无法启动，可以前往conf/pulsar_env.sh修改PULSAR_MEM这个参数。</p>\n<p>单机部署的时候，可以选择安装<em>builtin connectors</em> 和<em>tiered storage offloaders</em> ，这两个组件的具体作用后面再补充。这两个组件不是必须要安装的。</p>\n<p>启动pulsar后。可以生产和消费消息。需要注意的是，pulsar可以不用生产消息也可以消费消息，这句话的含义是，当你启动一个consumer去订阅一个topic并且消费消息的时候，如果provider并没有这个topic和相关的消息，生产者会主动创建一个topic，并产生消息，供消费者消费。</p>\n<ul>\n<li>保证消息到达 <a href=\"http://bookkeeper.apache.org/\">Apache BookKeeper</a> ，持久化的消息存储</li>\n<li> <a href=\"https://pulsar.apache.org/docs/en/functions-overview\">Pulsar Functions</a>  轻量级计算框架，数据流处理</li>\n<li> <a href=\"https://pulsar.apache.org/docs/en/io-overview\">Pulsar IO</a> 处理数据的流入流出pulsar</li>\n<li><a href=\"https://pulsar.apache.org/docs/en/concepts-tiered-storage\">Tiered Storage</a> 数据冷热数据转移</li>\n</ul>\n<h2 id=\"message\"><a href=\"#message\" class=\"headerlink\" title=\"message\"></a>message</h2><p>生产者生产消息，消费者消费消息，消费者没消费一条消息，会向broker传递一个ack，表示该条消息已被消费。pulsar默认会保留所有的消息，只有当消费者将消息全部消费之后，pulsar才会删除这些消息。如果消费者消费消息失败，可以重试消费。</p>\n<table>\n<thead>\n<tr>\n<th>元素</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>value/data payload</td>\n<td>消息值</td>\n</tr>\n<tr>\n<td>key</td>\n<td>每条消息可以设置一个key值，可选</td>\n</tr>\n<tr>\n<td>properties</td>\n<td>key/value形式的map，用户自定义的属性map</td>\n</tr>\n<tr>\n<td>producer name</td>\n<td>生产者名字，可选，不设定则为默认名</td>\n</tr>\n<tr>\n<td>sequence id</td>\n<td>每一条消息都属于某个topic的一个有序的序列，sequence id表示该消息的序号</td>\n</tr>\n<tr>\n<td>publish time</td>\n<td>消息产生的时间，由生产者自动提供</td>\n</tr>\n<tr>\n<td>event time</td>\n<td>应用标注的时间，个人理解为消息被消费的时间戳</td>\n</tr>\n<tr>\n<td>TypedMessageBuilder</td>\n<td>构造消息，具体用处后面再研究</td>\n</tr>\n</tbody></table>\n<p>消息的默认大小为5M，也自定义大小。</p>\n<ul>\n<li><p>在<code>broker.conf</code> file. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The max size of a message (in bytes).</span></span><br><span class=\"line\">maxMessageSize=5242880</span><br></pre></td></tr></table></figure></li>\n<li><p>在<code>bookkeeper.conf</code> file. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The max size of the netty frame (in bytes). Any messages received larger than this value are rejected. The default value is 5 MB.</span></span><br><span class=\"line\">nettyMaxFrameSizeBytes=5253120</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"Producers\"><a href=\"#Producers\" class=\"headerlink\" title=\"Producers\"></a>Producers</h2><p>producer生产某个topic的消息给broker，broker处理这些消息。</p>\n<p>消息发送模式分为异步和同步两种方式。</p>\n<table>\n<thead>\n<tr>\n<th>模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>同步</td>\n<td>生产者将消息发送给broker之后，会同步等待broker返回一个ack，若未收到ack，则认为该消息发送失败。</td>\n</tr>\n<tr>\n<td>异步</td>\n<td>生产者将消息发送给一个队列，然后立即返回，消息队列后台处理。若消息队列满了，则直接返回失败或者消息堵塞。消息队列大小可自定义。</td>\n</tr>\n</tbody></table>\n<p>接入模式（access mode）</p>\n<p>对于生产者有多种接入模式</p>\n<table>\n<thead>\n<tr>\n<th>接入模式</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>shared</td>\n<td>多个生产者可以将消息发送到同一个topic，这是默认模式</td>\n</tr>\n<tr>\n<td>exclusive</td>\n<td>只能一个生产者发布消息到某个topic，即独占该topic。其他生产者发布消息到该topic将会报错。当old生产者经历完一个网络分片之后将会被驱逐，然后选举一个新的生产者独占该topic。选举方式后续研究。</td>\n</tr>\n<tr>\n<td>WaitForExclusive</td>\n<td>当一个topic被某个生产者独占的时候，新的生产者将等待一个pending时间，而不是直接报错，时间到了，选择一个producer独占该topic。</td>\n</tr>\n</tbody></table>\n<h2 id=\"消息压缩\"><a href=\"#消息压缩\" class=\"headerlink\" title=\"消息压缩\"></a>消息压缩</h2><p>支持以下类型</p>\n<ul>\n<li><a href=\"https://github.com/lz4/lz4\">LZ4</a></li>\n<li><a href=\"https://zlib.net/\">ZLIB</a></li>\n<li><a href=\"https://facebook.github.io/zstd/\">ZSTD</a></li>\n<li><a href=\"https://google.github.io/snappy/\">SNAPPY</a></li>\n</ul>\n<h2 id=\"Batching\"><a href=\"#Batching\" class=\"headerlink\" title=\"Batching\"></a>Batching</h2><p>消息可以一个批次一个批次地发送，提高发送的效率。</p>\n<h2 id=\"chunking\"><a href=\"#chunking\" class=\"headerlink\" title=\"chunking\"></a>chunking</h2><p>当消息过大，可以分块发送，消费者收到这些chunk之后再组装成一条完整的消息。</p>\n"},{"title":"typora常用命令记录","date":"2021-11-10T14:39:18.000Z","_content":"\n**1、标题**\n\nctrl+数字，比如ctrl+1表示一级标题。\n\n# 我是一级标题，你好啊！\n\n<!--more-->\n\n**2、引用**\n\n\\>+空格，可以得到如下的显示效果。\n\n> 这里我是通过\\>+空格得到的，有一点点好玩！\n\n**3、转义**\n\n有时候我就想用一下\\>符号，但是\\>加上空格之后就变成引用了，要想被typora定义的一些符号保持原来的意义，可以在这些特殊的符号前加一个\\即可。\n\n**4、插入公式**\n\ntypora插入的公式蛮漂亮的，两个$$符号再回车即可得到公式的输入框。\n\n**5、插入字符**\n\n第4点是单独插入一个公式，但是如果我们想在一段话中插入一个字符或者公式的话，就不能像第4点那样做了，不过也有些类似，就是把需要引入的符号或者公式放在一对\\$\\$中间即可。举个例子，我想在这里插入一个有下标的字符$$w_i$$，看起来很棒吧。\n\n**6、上\\下标**\n\n有的同学可能想知道第5点中的下标怎么得到的，typora很贴合程序员的使用习惯，我第一次使用的时候就习惯性地用下划线(_)表示下标，用倒三角(^)表示上标，实际上typora的确是这样设计的。\n\n**7、显示部分文章内容**\n\n有时候我们希望前端展示的时候，一篇文章只展示一部分，剩余部分需要点击下展开之类的按钮才能看到全文，可以在配置文件中设置，也可以直接在写博文的时候设置，我比较喜欢直接设置，即在需要截断的地方加上$$<!--more-->$$即可，中间的文字内容可以自定义，我一般用的是more。\n\n","source":"_posts/typora常用命令记录.md","raw":"---\ntitle: typora常用命令记录\ndate: 2021-11-10 22:39:18\ncategories:\n- 技术\ntags:\n---\n\n**1、标题**\n\nctrl+数字，比如ctrl+1表示一级标题。\n\n# 我是一级标题，你好啊！\n\n<!--more-->\n\n**2、引用**\n\n\\>+空格，可以得到如下的显示效果。\n\n> 这里我是通过\\>+空格得到的，有一点点好玩！\n\n**3、转义**\n\n有时候我就想用一下\\>符号，但是\\>加上空格之后就变成引用了，要想被typora定义的一些符号保持原来的意义，可以在这些特殊的符号前加一个\\即可。\n\n**4、插入公式**\n\ntypora插入的公式蛮漂亮的，两个$$符号再回车即可得到公式的输入框。\n\n**5、插入字符**\n\n第4点是单独插入一个公式，但是如果我们想在一段话中插入一个字符或者公式的话，就不能像第4点那样做了，不过也有些类似，就是把需要引入的符号或者公式放在一对\\$\\$中间即可。举个例子，我想在这里插入一个有下标的字符$$w_i$$，看起来很棒吧。\n\n**6、上\\下标**\n\n有的同学可能想知道第5点中的下标怎么得到的，typora很贴合程序员的使用习惯，我第一次使用的时候就习惯性地用下划线(_)表示下标，用倒三角(^)表示上标，实际上typora的确是这样设计的。\n\n**7、显示部分文章内容**\n\n有时候我们希望前端展示的时候，一篇文章只展示一部分，剩余部分需要点击下展开之类的按钮才能看到全文，可以在配置文件中设置，也可以直接在写博文的时候设置，我比较喜欢直接设置，即在需要截断的地方加上$$<!--more-->$$即可，中间的文字内容可以自定义，我一般用的是more。\n\n","slug":"typora常用命令记录","published":1,"updated":"2022-01-10T11:07:54.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8f000bu8vxhx0kbbnf","content":"<p><strong>1、标题</strong></p>\n<p>ctrl+数字，比如ctrl+1表示一级标题。</p>\n<h1 id=\"我是一级标题，你好啊！\"><a href=\"#我是一级标题，你好啊！\" class=\"headerlink\" title=\"我是一级标题，你好啊！\"></a>我是一级标题，你好啊！</h1><span id=\"more\"></span>\n\n<p><strong>2、引用</strong></p>\n<p>&gt;+空格，可以得到如下的显示效果。</p>\n<blockquote>\n<p>这里我是通过&gt;+空格得到的，有一点点好玩！</p>\n</blockquote>\n<p><strong>3、转义</strong></p>\n<p>有时候我就想用一下&gt;符号，但是&gt;加上空格之后就变成引用了，要想被typora定义的一些符号保持原来的意义，可以在这些特殊的符号前加一个\\即可。</p>\n<p><strong>4、插入公式</strong></p>\n<p>typora插入的公式蛮漂亮的，两个$$符号再回车即可得到公式的输入框。</p>\n<p><strong>5、插入字符</strong></p>\n<p>第4点是单独插入一个公式，但是如果我们想在一段话中插入一个字符或者公式的话，就不能像第4点那样做了，不过也有些类似，就是把需要引入的符号或者公式放在一对$$中间即可。举个例子，我想在这里插入一个有下标的字符$$w_i$$，看起来很棒吧。</p>\n<p><strong>6、上\\下标</strong></p>\n<p>有的同学可能想知道第5点中的下标怎么得到的，typora很贴合程序员的使用习惯，我第一次使用的时候就习惯性地用下划线(_)表示下标，用倒三角(^)表示上标，实际上typora的确是这样设计的。</p>\n<p><strong>7、显示部分文章内容</strong></p>\n<p>有时候我们希望前端展示的时候，一篇文章只展示一部分，剩余部分需要点击下展开之类的按钮才能看到全文，可以在配置文件中设置，也可以直接在写博文的时候设置，我比较喜欢直接设置，即在需要截断的地方加上$$<!--more-->$$即可，中间的文字内容可以自定义，我一般用的是more。</p>\n","site":{"data":{}},"excerpt":"<p><strong>1、标题</strong></p>\n<p>ctrl+数字，比如ctrl+1表示一级标题。</p>\n<h1 id=\"我是一级标题，你好啊！\"><a href=\"#我是一级标题，你好啊！\" class=\"headerlink\" title=\"我是一级标题，你好啊！\"></a>我是一级标题，你好啊！</h1>","more":"<p><strong>2、引用</strong></p>\n<p>&gt;+空格，可以得到如下的显示效果。</p>\n<blockquote>\n<p>这里我是通过&gt;+空格得到的，有一点点好玩！</p>\n</blockquote>\n<p><strong>3、转义</strong></p>\n<p>有时候我就想用一下&gt;符号，但是&gt;加上空格之后就变成引用了，要想被typora定义的一些符号保持原来的意义，可以在这些特殊的符号前加一个\\即可。</p>\n<p><strong>4、插入公式</strong></p>\n<p>typora插入的公式蛮漂亮的，两个$$符号再回车即可得到公式的输入框。</p>\n<p><strong>5、插入字符</strong></p>\n<p>第4点是单独插入一个公式，但是如果我们想在一段话中插入一个字符或者公式的话，就不能像第4点那样做了，不过也有些类似，就是把需要引入的符号或者公式放在一对$$中间即可。举个例子，我想在这里插入一个有下标的字符$$w_i$$，看起来很棒吧。</p>\n<p><strong>6、上\\下标</strong></p>\n<p>有的同学可能想知道第5点中的下标怎么得到的，typora很贴合程序员的使用习惯，我第一次使用的时候就习惯性地用下划线(_)表示下标，用倒三角(^)表示上标，实际上typora的确是这样设计的。</p>\n<p><strong>7、显示部分文章内容</strong></p>\n<p>有时候我们希望前端展示的时候，一篇文章只展示一部分，剩余部分需要点击下展开之类的按钮才能看到全文，可以在配置文件中设置，也可以直接在写博文的时候设置，我比较喜欢直接设置，即在需要截断的地方加上$$<!--more-->$$即可，中间的文字内容可以自定义，我一般用的是more。</p>"},{"title":"shell脚本入门","date":"2021-11-14T04:30:47.000Z","_content":"","source":"_posts/shell脚本入门.md","raw":"---\ntitle: shell脚本入门\ndate: 2021-11-14 12:30:47\ncategories:\n- 脚本学习\ntags:\n---\n","slug":"shell脚本入门","published":1,"updated":"2022-01-10T11:07:41.590Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8g000cu8vxhd3i58k8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"会计学基础","date":"2021-12-08T14:54:58.000Z","_content":"\n## 一、会计信息形成的三个问题\n\n1、会计主体假设\n\n会计主体==法律主体\n\n会计主体超越法律主体\n\n2、持续经营假设\n\n3、会计分期假设\n\n","source":"_posts/会计学基础.md","raw":"---\ntitle: 会计学基础\ndate: 2021-12-08 22:54:58\ncategories: \n- 会计学\ntags:\n---\n\n## 一、会计信息形成的三个问题\n\n1、会计主体假设\n\n会计主体==法律主体\n\n会计主体超越法律主体\n\n2、持续经营假设\n\n3、会计分期假设\n\n","slug":"会计学基础","published":1,"updated":"2022-01-10T11:30:49.593Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8i000fu8vx04qyb3ph","content":"<h2 id=\"一、会计信息形成的三个问题\"><a href=\"#一、会计信息形成的三个问题\" class=\"headerlink\" title=\"一、会计信息形成的三个问题\"></a>一、会计信息形成的三个问题</h2><p>1、会计主体假设</p>\n<p>会计主体==法律主体</p>\n<p>会计主体超越法律主体</p>\n<p>2、持续经营假设</p>\n<p>3、会计分期假设</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、会计信息形成的三个问题\"><a href=\"#一、会计信息形成的三个问题\" class=\"headerlink\" title=\"一、会计信息形成的三个问题\"></a>一、会计信息形成的三个问题</h2><p>1、会计主体假设</p>\n<p>会计主体==法律主体</p>\n<p>会计主体超越法律主体</p>\n<p>2、持续经营假设</p>\n<p>3、会计分期假设</p>\n"},{"title":"动态规划","mathjax":true,"date":"2021-11-08T00:43:52.000Z","_content":"\n> 写在前面，看了比较多的博文将动态规划的，解决问题的基础都是状态转移方程。这里我个人认为至少有两点需要深入探讨一下，第一个是一个问题为什么可以用动态规划求解，即为什么满足动态规划的三个条件，大家基本上都是默认这个问题可以用动态规划求解，然后给出了状态转移方程；第二个是出口条件的设定，有了公式还不能解决问题，还要考虑当问题到达最小子问题的时候，值为多少。\n\n## 一、例题\n\n1、给出一个数字序列，从中选出不相邻的数字，使得这些数字之和最大。\n\n输入：4 1 1 9 1\n\n输出：13（4和9不相邻，且加起来的和是最大的）\n\n<!--more-->\n\n分析：先定义一个函数F(i)，其中i表示这个数字序列的第i个数字，函数F(i)表示从i个数字中选出不相邻的数字，使得这些数字之和最大。我们每次只需要考虑第i个数字是否选即可。如果我们选择第i个数字作为结果序列的一员，则数字之和为F(i-2)+V(i)，其中V(i)表示第i个数字的值；如果我们不选择第i个数字，则只需要考虑前i-1个数字可以选出的最大的和F(i-1)即可。所以每次我们需要得到max{F(i-1,F(i-2)+V(i)}。这就是我们得到的转移方程。最后再来看一看递归到最底层的时候是怎样的，即考虑F(0)、F(1)和F(2)的值，显然F(0)=0，F(1)=V(1)，而F(2)=max{v(1),v(2)}。\n\njava代码如下：\n\n```java\npublic int maxSum(int[] arr) {\n    int n = arr.length;\n    int[] res = new int[n+1];\n    res[0] = 0;\n    res[1] = arr[0];\n    res[2] = Math.max(arr[0],arr[1]);\n    for(int i = 3; i < n+1; i++) {\n        res[i] = Math.max(res[i-1],res[i-2]+arr[i-1]);\n    }\n}\n```\n\n> 细节：对于动态规划问题，我比较喜欢设置一个哨兵位，即res[0]为哨兵，结果从res[1]开始计算，这样是为了方便计算，res[i]中的i就可以表示实际的第几个数字了，而不用像数组那样，还需要i-1。但是对于给出参数arr，它的第i-1位才表示第i个数字，在编码的时候需要注意一下。\n\n2、给出一个数字序列（值都大于0）和一个目标值T>0，判断这个数字序列中的能否选出和为T的一组数字，能则输出True，否则输出False。\n\n输入：3 34 4 12 5 2\n\n输入：9\n\n输出：True（4+5=9）\n\n分析：问题可以简述为前N个数字的和（全部数字或者部分数字之和）能否构成T，此时只需要考虑第N个数字是否要参与和的运算，（1）首先当v(N)==T的时候，则前N个数字一定能够组成T；（2）当v(N)<T的时候，需要考虑N-1个数字能否组成T和N-1个数字能否组成T-v(N)，两者有一个为True则结果为True；（3）当v(N) >T的时候，需要判断前N-1个数字能否构成T即可。\n\n分析可能比较抽象，下面看一个表格。\n\n|      |  0   |  1   |  2   |  3   |  4   |  5   |  6   |  7   |  8   |  9   |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n|  0   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |\n|  1   |  F   |  F   |  F   |  T   |  F   |  F   |  F   |  F   |  F   |  F   |\n|  2   |  F   |  F   |  F   |  T   |  F   |  F   |  F   |  F   |  F   |  F   |\n|  3   |  F   |  F   |  F   |  T   |  T   |  F   |  F   |  T   |  F   |  F   |\n|  4   |  F   |  F   |  F   |  T   |  T   |  F   |  F   |  T   |  F   |  F   |\n|  5   |  F   |  F   |  F   |  T   |  T   |  T   |  F   |  T   |  T   |  T   |\n|  6   |  F   |  F   |  T   |  T   |  T   |  T   |  T   |  T   |  T   |  T   |\n\n表头行的每个数字表示目标值（Target），表头列的每个数字代表第几个数字。\n\n首先看第0行，表示只有0个数字，显然不可能组成任何一个数，因此第0行的所有结果均为false，再看第0列，此时表示目标值为0，由于数组中的值都大于0，所以所有结果都为false。接着开始计算，看第一行，第一行表示前1个数字能否组成1、2、3...9，第一个数字的值为3，即v(1)=3>1,2，则根据前文分析中的第三点可以得出，需要看前1-1=0个数能否构成T=9，而前0个数不能构成任何一个数字，所以（1，1）、（1，2）都为false；v(1)=3，根据前文分析的第一点可以得出，前1个数一定能够组成数字3，则（1，3）为true；v(1)=3<4,5,...i,...,9，根据前文分析的第二点，需要考虑前1-1=0个数能否组成T=9和前1-1=0个数能否组成T-i，显然两个条件都为false。\n\n按照上述的分析，一行一行往下计算，最终可以得到上述表格。而我们要的结果则是（6，9）的值，从表格中可以看出，结果为true。\n\njava代码如下：\n\n```java\npublic boolean isTarget(int[] arr, int target) {\n        int n = arr.length;\n        boolean[][] res = new boolean[n+1][target+1];\n\n        for (int i = 1; i < n+1; i++) {\n            for (int j = 1; j < target+1; j++) {\n                if (arr[i-1] == j) {\n                    res[i][j] = true;\n                }else if (arr[i-1] < j){\n                    res[i][j] = res[i-1][j] || res[i-1][j-arr[i-1]];\n                }else {\n                    res[i][j] = res[i-1][j];\n                }\n            }\n        }\n        return res[n][target];\n    }\n```\n3、0-1背包问题\n\n有N件物品和一个容量是V的背包。每件物品只能使用一次。第i件物品的体积是$$v_i$$_，价值是$$w_i$$，求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且价值最大。输出最大价值。\n\n输入：\n\n4 5\n1 2\n2 4\n3 4\n4 5\n\n输出：8\n\n分析：其实问题2即可看作是一个背包问题，这里再次分析一下。将$$N$$个物品放入容量为$$V$$的背包中，每次只需要考虑前$$i$$个物品放入容量为$$V=0,1,2...$$的背包的最大价值即可。直接给出转移方程如下：\n$$\nF[i][j]=Max{(F[i-1][j],F[i-1][j-w_i])}\n$$\n公式的含义表示将前i个物品放入容量为$$j$$的背包中的最大价值是多少。在$$w_i<=j$$的情况下，需要考虑第$$i$$个物品是否放入背包两种情况。若不放，则需要知道将前$$i-1$$个物品放入容量为j的背包中的最大价值；若放入，则需要考虑将前$$i-1$$个物品放入容量为$$j-w_i$$的背包中的最大价值。两者取最大值即可。\n\njava代码如下：\n\n解法1：时间复杂度为0(NV)，空间复杂度0(NV)。\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String str = in.nextLine();\n        int N = Integer.parseInt(str.split(\" \")[0]);\n        int V = Integer.parseInt(str.split(\" \")[1]);\n        \n        int[] carr = new int[N+1];\n        int[] warr = new int[N+1];\n        \n        for (int i = 0; i < N; i++) {\n            String cAndW = in.nextLine();\n            carr[i+1] = Integer.parseInt(cAndW.split(\" \")[0]);\n            warr[i+1] = Integer.parseInt(cAndW.split(\" \")[1]);\n        }\n        \n        int[] res = new int[V+1];\n        \n        for (int i = 1; i < N+1; i++) {\n            for (int j = V; j > 0; j--) {\n                if (carr[i] <= j) {\n                    res[j] = Math.max(res[j],res[j-carr[i]]+warr[i]);\n                }\n            }\n        }\n        System.out.println(res[V]);\n        \n    } \n}\n```\n\n解法2：时间复杂度为0(NV)，空间复杂度0(V)。\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String str = in.nextLine();\n        int N = Integer.parseInt(str.split(\" \")[0]);\n        int V = Integer.parseInt(str.split(\" \")[1]);\n        \n        int[] carr = new int[N+1];\n        int[] warr = new int[N+1];\n        \n        for (int i = 0; i < N; i++) {\n            String cAndW = in.nextLine();\n            carr[i+1] = Integer.parseInt(cAndW.split(\" \")[0]);\n            warr[i+1] = Integer.parseInt(cAndW.split(\" \")[1]);\n        }\n        \n        int[][] res = new int[N+1][V+1];\n        \n        for (int i = 1; i < N+1; i++) {\n            for (int j = 1; j < V+!; j++) {\n                if (carr[i] <= j) {\n                    res[i][j] = Math.max(res[i-1][j],res[i-1][j-carr[i]]+warr[i]);\n                }else {\n                    res[i][j] = res[i-1][j];\n                }\n            }\n        }\n        System.out.println(res[N][V]);\n        \n    } \n}\n```\n\n\n\n\n\n","source":"_posts/动态规划.md","raw":"---\ntitle: 动态规划\nmathjax: true\ndate: 2021-11-08 08:43:52\ncategories:\n- 算法\ntags:\n---\n\n> 写在前面，看了比较多的博文将动态规划的，解决问题的基础都是状态转移方程。这里我个人认为至少有两点需要深入探讨一下，第一个是一个问题为什么可以用动态规划求解，即为什么满足动态规划的三个条件，大家基本上都是默认这个问题可以用动态规划求解，然后给出了状态转移方程；第二个是出口条件的设定，有了公式还不能解决问题，还要考虑当问题到达最小子问题的时候，值为多少。\n\n## 一、例题\n\n1、给出一个数字序列，从中选出不相邻的数字，使得这些数字之和最大。\n\n输入：4 1 1 9 1\n\n输出：13（4和9不相邻，且加起来的和是最大的）\n\n<!--more-->\n\n分析：先定义一个函数F(i)，其中i表示这个数字序列的第i个数字，函数F(i)表示从i个数字中选出不相邻的数字，使得这些数字之和最大。我们每次只需要考虑第i个数字是否选即可。如果我们选择第i个数字作为结果序列的一员，则数字之和为F(i-2)+V(i)，其中V(i)表示第i个数字的值；如果我们不选择第i个数字，则只需要考虑前i-1个数字可以选出的最大的和F(i-1)即可。所以每次我们需要得到max{F(i-1,F(i-2)+V(i)}。这就是我们得到的转移方程。最后再来看一看递归到最底层的时候是怎样的，即考虑F(0)、F(1)和F(2)的值，显然F(0)=0，F(1)=V(1)，而F(2)=max{v(1),v(2)}。\n\njava代码如下：\n\n```java\npublic int maxSum(int[] arr) {\n    int n = arr.length;\n    int[] res = new int[n+1];\n    res[0] = 0;\n    res[1] = arr[0];\n    res[2] = Math.max(arr[0],arr[1]);\n    for(int i = 3; i < n+1; i++) {\n        res[i] = Math.max(res[i-1],res[i-2]+arr[i-1]);\n    }\n}\n```\n\n> 细节：对于动态规划问题，我比较喜欢设置一个哨兵位，即res[0]为哨兵，结果从res[1]开始计算，这样是为了方便计算，res[i]中的i就可以表示实际的第几个数字了，而不用像数组那样，还需要i-1。但是对于给出参数arr，它的第i-1位才表示第i个数字，在编码的时候需要注意一下。\n\n2、给出一个数字序列（值都大于0）和一个目标值T>0，判断这个数字序列中的能否选出和为T的一组数字，能则输出True，否则输出False。\n\n输入：3 34 4 12 5 2\n\n输入：9\n\n输出：True（4+5=9）\n\n分析：问题可以简述为前N个数字的和（全部数字或者部分数字之和）能否构成T，此时只需要考虑第N个数字是否要参与和的运算，（1）首先当v(N)==T的时候，则前N个数字一定能够组成T；（2）当v(N)<T的时候，需要考虑N-1个数字能否组成T和N-1个数字能否组成T-v(N)，两者有一个为True则结果为True；（3）当v(N) >T的时候，需要判断前N-1个数字能否构成T即可。\n\n分析可能比较抽象，下面看一个表格。\n\n|      |  0   |  1   |  2   |  3   |  4   |  5   |  6   |  7   |  8   |  9   |\n| :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: |\n|  0   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |  F   |\n|  1   |  F   |  F   |  F   |  T   |  F   |  F   |  F   |  F   |  F   |  F   |\n|  2   |  F   |  F   |  F   |  T   |  F   |  F   |  F   |  F   |  F   |  F   |\n|  3   |  F   |  F   |  F   |  T   |  T   |  F   |  F   |  T   |  F   |  F   |\n|  4   |  F   |  F   |  F   |  T   |  T   |  F   |  F   |  T   |  F   |  F   |\n|  5   |  F   |  F   |  F   |  T   |  T   |  T   |  F   |  T   |  T   |  T   |\n|  6   |  F   |  F   |  T   |  T   |  T   |  T   |  T   |  T   |  T   |  T   |\n\n表头行的每个数字表示目标值（Target），表头列的每个数字代表第几个数字。\n\n首先看第0行，表示只有0个数字，显然不可能组成任何一个数，因此第0行的所有结果均为false，再看第0列，此时表示目标值为0，由于数组中的值都大于0，所以所有结果都为false。接着开始计算，看第一行，第一行表示前1个数字能否组成1、2、3...9，第一个数字的值为3，即v(1)=3>1,2，则根据前文分析中的第三点可以得出，需要看前1-1=0个数能否构成T=9，而前0个数不能构成任何一个数字，所以（1，1）、（1，2）都为false；v(1)=3，根据前文分析的第一点可以得出，前1个数一定能够组成数字3，则（1，3）为true；v(1)=3<4,5,...i,...,9，根据前文分析的第二点，需要考虑前1-1=0个数能否组成T=9和前1-1=0个数能否组成T-i，显然两个条件都为false。\n\n按照上述的分析，一行一行往下计算，最终可以得到上述表格。而我们要的结果则是（6，9）的值，从表格中可以看出，结果为true。\n\njava代码如下：\n\n```java\npublic boolean isTarget(int[] arr, int target) {\n        int n = arr.length;\n        boolean[][] res = new boolean[n+1][target+1];\n\n        for (int i = 1; i < n+1; i++) {\n            for (int j = 1; j < target+1; j++) {\n                if (arr[i-1] == j) {\n                    res[i][j] = true;\n                }else if (arr[i-1] < j){\n                    res[i][j] = res[i-1][j] || res[i-1][j-arr[i-1]];\n                }else {\n                    res[i][j] = res[i-1][j];\n                }\n            }\n        }\n        return res[n][target];\n    }\n```\n3、0-1背包问题\n\n有N件物品和一个容量是V的背包。每件物品只能使用一次。第i件物品的体积是$$v_i$$_，价值是$$w_i$$，求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且价值最大。输出最大价值。\n\n输入：\n\n4 5\n1 2\n2 4\n3 4\n4 5\n\n输出：8\n\n分析：其实问题2即可看作是一个背包问题，这里再次分析一下。将$$N$$个物品放入容量为$$V$$的背包中，每次只需要考虑前$$i$$个物品放入容量为$$V=0,1,2...$$的背包的最大价值即可。直接给出转移方程如下：\n$$\nF[i][j]=Max{(F[i-1][j],F[i-1][j-w_i])}\n$$\n公式的含义表示将前i个物品放入容量为$$j$$的背包中的最大价值是多少。在$$w_i<=j$$的情况下，需要考虑第$$i$$个物品是否放入背包两种情况。若不放，则需要知道将前$$i-1$$个物品放入容量为j的背包中的最大价值；若放入，则需要考虑将前$$i-1$$个物品放入容量为$$j-w_i$$的背包中的最大价值。两者取最大值即可。\n\njava代码如下：\n\n解法1：时间复杂度为0(NV)，空间复杂度0(NV)。\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String str = in.nextLine();\n        int N = Integer.parseInt(str.split(\" \")[0]);\n        int V = Integer.parseInt(str.split(\" \")[1]);\n        \n        int[] carr = new int[N+1];\n        int[] warr = new int[N+1];\n        \n        for (int i = 0; i < N; i++) {\n            String cAndW = in.nextLine();\n            carr[i+1] = Integer.parseInt(cAndW.split(\" \")[0]);\n            warr[i+1] = Integer.parseInt(cAndW.split(\" \")[1]);\n        }\n        \n        int[] res = new int[V+1];\n        \n        for (int i = 1; i < N+1; i++) {\n            for (int j = V; j > 0; j--) {\n                if (carr[i] <= j) {\n                    res[j] = Math.max(res[j],res[j-carr[i]]+warr[i]);\n                }\n            }\n        }\n        System.out.println(res[V]);\n        \n    } \n}\n```\n\n解法2：时间复杂度为0(NV)，空间复杂度0(V)。\n\n```java\npublic class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        String str = in.nextLine();\n        int N = Integer.parseInt(str.split(\" \")[0]);\n        int V = Integer.parseInt(str.split(\" \")[1]);\n        \n        int[] carr = new int[N+1];\n        int[] warr = new int[N+1];\n        \n        for (int i = 0; i < N; i++) {\n            String cAndW = in.nextLine();\n            carr[i+1] = Integer.parseInt(cAndW.split(\" \")[0]);\n            warr[i+1] = Integer.parseInt(cAndW.split(\" \")[1]);\n        }\n        \n        int[][] res = new int[N+1][V+1];\n        \n        for (int i = 1; i < N+1; i++) {\n            for (int j = 1; j < V+!; j++) {\n                if (carr[i] <= j) {\n                    res[i][j] = Math.max(res[i-1][j],res[i-1][j-carr[i]]+warr[i]);\n                }else {\n                    res[i][j] = res[i-1][j];\n                }\n            }\n        }\n        System.out.println(res[N][V]);\n        \n    } \n}\n```\n\n\n\n\n\n","slug":"动态规划","published":1,"updated":"2022-01-10T11:08:20.539Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8k000hu8vx30q7aaxi","content":"<blockquote>\n<p>写在前面，看了比较多的博文将动态规划的，解决问题的基础都是状态转移方程。这里我个人认为至少有两点需要深入探讨一下，第一个是一个问题为什么可以用动态规划求解，即为什么满足动态规划的三个条件，大家基本上都是默认这个问题可以用动态规划求解，然后给出了状态转移方程；第二个是出口条件的设定，有了公式还不能解决问题，还要考虑当问题到达最小子问题的时候，值为多少。</p>\n</blockquote>\n<h2 id=\"一、例题\"><a href=\"#一、例题\" class=\"headerlink\" title=\"一、例题\"></a>一、例题</h2><p>1、给出一个数字序列，从中选出不相邻的数字，使得这些数字之和最大。</p>\n<p>输入：4 1 1 9 1</p>\n<p>输出：13（4和9不相邻，且加起来的和是最大的）</p>\n<span id=\"more\"></span>\n\n<p>分析：先定义一个函数F(i)，其中i表示这个数字序列的第i个数字，函数F(i)表示从i个数字中选出不相邻的数字，使得这些数字之和最大。我们每次只需要考虑第i个数字是否选即可。如果我们选择第i个数字作为结果序列的一员，则数字之和为F(i-2)+V(i)，其中V(i)表示第i个数字的值；如果我们不选择第i个数字，则只需要考虑前i-1个数字可以选出的最大的和F(i-1)即可。所以每次我们需要得到max{F(i-1,F(i-2)+V(i)}。这就是我们得到的转移方程。最后再来看一看递归到最底层的时候是怎样的，即考虑F(0)、F(1)和F(2)的值，显然F(0)=0，F(1)=V(1)，而F(2)=max{v(1),v(2)}。</p>\n<p>java代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxSum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = arr.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">    res[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    res[<span class=\"number\">1</span>] = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">    res[<span class=\"number\">2</span>] = Math.max(arr[<span class=\"number\">0</span>],arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt; n+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        res[i] = Math.max(res[i-<span class=\"number\">1</span>],res[i-<span class=\"number\">2</span>]+arr[i-<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>细节：对于动态规划问题，我比较喜欢设置一个哨兵位，即res[0]为哨兵，结果从res[1]开始计算，这样是为了方便计算，res[i]中的i就可以表示实际的第几个数字了，而不用像数组那样，还需要i-1。但是对于给出参数arr，它的第i-1位才表示第i个数字，在编码的时候需要注意一下。</p>\n</blockquote>\n<p>2、给出一个数字序列（值都大于0）和一个目标值T&gt;0，判断这个数字序列中的能否选出和为T的一组数字，能则输出True，否则输出False。</p>\n<p>输入：3 34 4 12 5 2</p>\n<p>输入：9</p>\n<p>输出：True（4+5=9）</p>\n<p>分析：问题可以简述为前N个数字的和（全部数字或者部分数字之和）能否构成T，此时只需要考虑第N个数字是否要参与和的运算，（1）首先当v(N)==T的时候，则前N个数字一定能够组成T；（2）当v(N)&lt;T的时候，需要考虑N-1个数字能否组成T和N-1个数字能否组成T-v(N)，两者有一个为True则结果为True；（3）当v(N) &gt;T的时候，需要判断前N-1个数字能否构成T即可。</p>\n<p>分析可能比较抽象，下面看一个表格。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n<th align=\"center\">8</th>\n<th align=\"center\">9</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n</tr>\n</tbody></table>\n<p>表头行的每个数字表示目标值（Target），表头列的每个数字代表第几个数字。</p>\n<p>首先看第0行，表示只有0个数字，显然不可能组成任何一个数，因此第0行的所有结果均为false，再看第0列，此时表示目标值为0，由于数组中的值都大于0，所以所有结果都为false。接着开始计算，看第一行，第一行表示前1个数字能否组成1、2、3…9，第一个数字的值为3，即v(1)=3&gt;1,2，则根据前文分析中的第三点可以得出，需要看前1-1=0个数能否构成T=9，而前0个数不能构成任何一个数字，所以（1，1）、（1，2）都为false；v(1)=3，根据前文分析的第一点可以得出，前1个数一定能够组成数字3，则（1，3）为true；v(1)=3&lt;4,5,…i,…,9，根据前文分析的第二点，需要考虑前1-1=0个数能否组成T=9和前1-1=0个数能否组成T-i，显然两个条件都为false。</p>\n<p>按照上述的分析，一行一行往下计算，最终可以得到上述表格。而我们要的结果则是（6，9）的值，从表格中可以看出，结果为true。</p>\n<p>java代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isTarget</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = arr.length;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[][] res = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[n+<span class=\"number\">1</span>][target+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; target+<span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[i-<span class=\"number\">1</span>] == j) &#123;</span><br><span class=\"line\">                    res[i][j] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arr[i-<span class=\"number\">1</span>] &lt; j)&#123;</span><br><span class=\"line\">                    res[i][j] = res[i-<span class=\"number\">1</span>][j] || res[i-<span class=\"number\">1</span>][j-arr[i-<span class=\"number\">1</span>]];</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res[i][j] = res[i-<span class=\"number\">1</span>][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[n][target];</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>3、0-1背包问题</p>\n<p>有N件物品和一个容量是V的背包。每件物品只能使用一次。第i件物品的体积是$$v_i$$_，价值是$$w_i$$，求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且价值最大。输出最大价值。</p>\n<p>输入：</p>\n<p>4 5<br>1 2<br>2 4<br>3 4<br>4 5</p>\n<p>输出：8</p>\n<p>分析：其实问题2即可看作是一个背包问题，这里再次分析一下。将$$N$$个物品放入容量为$$V$$的背包中，每次只需要考虑前$$i$$个物品放入容量为$$V=0,1,2…$$的背包的最大价值即可。直接给出转移方程如下：<br>$$<br>F[i][j]=Max{(F[i-1][j],F[i-1][j-w_i])}<br>$$<br>公式的含义表示将前i个物品放入容量为$$j$$的背包中的最大价值是多少。在$$w_i&lt;=j$$的情况下，需要考虑第$$i$$个物品是否放入背包两种情况。若不放，则需要知道将前$$i-1$$个物品放入容量为j的背包中的最大价值；若放入，则需要考虑将前$$i-1$$个物品放入容量为$$j-w_i$$的背包中的最大价值。两者取最大值即可。</p>\n<p>java代码如下：</p>\n<p>解法1：时间复杂度为0(NV)，空间复杂度0(NV)。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        String str = in.nextLine();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> N = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> V = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] carr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] warr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">            String cAndW = in.nextLine();</span><br><span class=\"line\">            carr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            warr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[V+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; N+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = V; j &gt; <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (carr[i] &lt;= j) &#123;</span><br><span class=\"line\">                    res[j] = Math.max(res[j],res[j-carr[i]]+warr[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(res[V]);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解法2：时间复杂度为0(NV)，空间复杂度0(V)。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        String str = in.nextLine();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> N = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> V = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] carr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] warr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">            String cAndW = in.nextLine();</span><br><span class=\"line\">            carr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            warr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>][V+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; N+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; V+!; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (carr[i] &lt;= j) &#123;</span><br><span class=\"line\">                    res[i][j] = Math.max(res[i-<span class=\"number\">1</span>][j],res[i-<span class=\"number\">1</span>][j-carr[i]]+warr[i]);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res[i][j] = res[i-<span class=\"number\">1</span>][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(res[N][V]);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>写在前面，看了比较多的博文将动态规划的，解决问题的基础都是状态转移方程。这里我个人认为至少有两点需要深入探讨一下，第一个是一个问题为什么可以用动态规划求解，即为什么满足动态规划的三个条件，大家基本上都是默认这个问题可以用动态规划求解，然后给出了状态转移方程；第二个是出口条件的设定，有了公式还不能解决问题，还要考虑当问题到达最小子问题的时候，值为多少。</p>\n</blockquote>\n<h2 id=\"一、例题\"><a href=\"#一、例题\" class=\"headerlink\" title=\"一、例题\"></a>一、例题</h2><p>1、给出一个数字序列，从中选出不相邻的数字，使得这些数字之和最大。</p>\n<p>输入：4 1 1 9 1</p>\n<p>输出：13（4和9不相邻，且加起来的和是最大的）</p>","more":"<p>分析：先定义一个函数F(i)，其中i表示这个数字序列的第i个数字，函数F(i)表示从i个数字中选出不相邻的数字，使得这些数字之和最大。我们每次只需要考虑第i个数字是否选即可。如果我们选择第i个数字作为结果序列的一员，则数字之和为F(i-2)+V(i)，其中V(i)表示第i个数字的值；如果我们不选择第i个数字，则只需要考虑前i-1个数字可以选出的最大的和F(i-1)即可。所以每次我们需要得到max{F(i-1,F(i-2)+V(i)}。这就是我们得到的转移方程。最后再来看一看递归到最底层的时候是怎样的，即考虑F(0)、F(1)和F(2)的值，显然F(0)=0，F(1)=V(1)，而F(2)=max{v(1),v(2)}。</p>\n<p>java代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">maxSum</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = arr.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[n+<span class=\"number\">1</span>];</span><br><span class=\"line\">    res[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    res[<span class=\"number\">1</span>] = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">    res[<span class=\"number\">2</span>] = Math.max(arr[<span class=\"number\">0</span>],arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">3</span>; i &lt; n+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        res[i] = Math.max(res[i-<span class=\"number\">1</span>],res[i-<span class=\"number\">2</span>]+arr[i-<span class=\"number\">1</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>细节：对于动态规划问题，我比较喜欢设置一个哨兵位，即res[0]为哨兵，结果从res[1]开始计算，这样是为了方便计算，res[i]中的i就可以表示实际的第几个数字了，而不用像数组那样，还需要i-1。但是对于给出参数arr，它的第i-1位才表示第i个数字，在编码的时候需要注意一下。</p>\n</blockquote>\n<p>2、给出一个数字序列（值都大于0）和一个目标值T&gt;0，判断这个数字序列中的能否选出和为T的一组数字，能则输出True，否则输出False。</p>\n<p>输入：3 34 4 12 5 2</p>\n<p>输入：9</p>\n<p>输出：True（4+5=9）</p>\n<p>分析：问题可以简述为前N个数字的和（全部数字或者部分数字之和）能否构成T，此时只需要考虑第N个数字是否要参与和的运算，（1）首先当v(N)==T的时候，则前N个数字一定能够组成T；（2）当v(N)&lt;T的时候，需要考虑N-1个数字能否组成T和N-1个数字能否组成T-v(N)，两者有一个为True则结果为True；（3）当v(N) &gt;T的时候，需要判断前N-1个数字能否构成T即可。</p>\n<p>分析可能比较抽象，下面看一个表格。</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">0</th>\n<th align=\"center\">1</th>\n<th align=\"center\">2</th>\n<th align=\"center\">3</th>\n<th align=\"center\">4</th>\n<th align=\"center\">5</th>\n<th align=\"center\">6</th>\n<th align=\"center\">7</th>\n<th align=\"center\">8</th>\n<th align=\"center\">9</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">0</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">1</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">2</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">3</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">4</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n</tr>\n<tr>\n<td align=\"center\">5</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n</tr>\n<tr>\n<td align=\"center\">6</td>\n<td align=\"center\">F</td>\n<td align=\"center\">F</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n<td align=\"center\">T</td>\n</tr>\n</tbody></table>\n<p>表头行的每个数字表示目标值（Target），表头列的每个数字代表第几个数字。</p>\n<p>首先看第0行，表示只有0个数字，显然不可能组成任何一个数，因此第0行的所有结果均为false，再看第0列，此时表示目标值为0，由于数组中的值都大于0，所以所有结果都为false。接着开始计算，看第一行，第一行表示前1个数字能否组成1、2、3…9，第一个数字的值为3，即v(1)=3&gt;1,2，则根据前文分析中的第三点可以得出，需要看前1-1=0个数能否构成T=9，而前0个数不能构成任何一个数字，所以（1，1）、（1，2）都为false；v(1)=3，根据前文分析的第一点可以得出，前1个数一定能够组成数字3，则（1，3）为true；v(1)=3&lt;4,5,…i,…,9，根据前文分析的第二点，需要考虑前1-1=0个数能否组成T=9和前1-1=0个数能否组成T-i，显然两个条件都为false。</p>\n<p>按照上述的分析，一行一行往下计算，最终可以得到上述表格。而我们要的结果则是（6，9）的值，从表格中可以看出，结果为true。</p>\n<p>java代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isTarget</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr, <span class=\"keyword\">int</span> target)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = arr.length;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span>[][] res = <span class=\"keyword\">new</span> <span class=\"keyword\">boolean</span>[n+<span class=\"number\">1</span>][target+<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; n+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; target+<span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[i-<span class=\"number\">1</span>] == j) &#123;</span><br><span class=\"line\">                    res[i][j] = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (arr[i-<span class=\"number\">1</span>] &lt; j)&#123;</span><br><span class=\"line\">                    res[i][j] = res[i-<span class=\"number\">1</span>][j] || res[i-<span class=\"number\">1</span>][j-arr[i-<span class=\"number\">1</span>]];</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res[i][j] = res[i-<span class=\"number\">1</span>][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res[n][target];</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>3、0-1背包问题</p>\n<p>有N件物品和一个容量是V的背包。每件物品只能使用一次。第i件物品的体积是$$v_i$$_，价值是$$w_i$$，求解将哪些物品装入背包，可使这些物品的总体积不超过背包容量，且价值最大。输出最大价值。</p>\n<p>输入：</p>\n<p>4 5<br>1 2<br>2 4<br>3 4<br>4 5</p>\n<p>输出：8</p>\n<p>分析：其实问题2即可看作是一个背包问题，这里再次分析一下。将$$N$$个物品放入容量为$$V$$的背包中，每次只需要考虑前$$i$$个物品放入容量为$$V=0,1,2…$$的背包的最大价值即可。直接给出转移方程如下：<br>$$<br>F[i][j]=Max{(F[i-1][j],F[i-1][j-w_i])}<br>$$<br>公式的含义表示将前i个物品放入容量为$$j$$的背包中的最大价值是多少。在$$w_i&lt;=j$$的情况下，需要考虑第$$i$$个物品是否放入背包两种情况。若不放，则需要知道将前$$i-1$$个物品放入容量为j的背包中的最大价值；若放入，则需要考虑将前$$i-1$$个物品放入容量为$$j-w_i$$的背包中的最大价值。两者取最大值即可。</p>\n<p>java代码如下：</p>\n<p>解法1：时间复杂度为0(NV)，空间复杂度0(NV)。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        String str = in.nextLine();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> N = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> V = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] carr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] warr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">            String cAndW = in.nextLine();</span><br><span class=\"line\">            carr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            warr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[V+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; N+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = V; j &gt; <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (carr[i] &lt;= j) &#123;</span><br><span class=\"line\">                    res[j] = Math.max(res[j],res[j-carr[i]]+warr[i]);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(res[V]);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>解法2：时间复杂度为0(NV)，空间复杂度0(V)。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Main</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner in = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        String str = in.nextLine();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> N = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> V = Integer.parseInt(str.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] carr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] warr = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">            String cAndW = in.nextLine();</span><br><span class=\"line\">            carr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            warr[i+<span class=\"number\">1</span>] = Integer.parseInt(cAndW.split(<span class=\"string\">&quot; &quot;</span>)[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">int</span>[][] res = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[N+<span class=\"number\">1</span>][V+<span class=\"number\">1</span>];</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; N+<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt; V+!; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (carr[i] &lt;= j) &#123;</span><br><span class=\"line\">                    res[i][j] = Math.max(res[i-<span class=\"number\">1</span>][j],res[i-<span class=\"number\">1</span>][j-carr[i]]+warr[i]);</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    res[i][j] = res[i-<span class=\"number\">1</span>][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(res[N][V]);</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"初识hexo","date":"2021-11-02T13:25:15.000Z","_content":"\n## 1、新建博客\n\n通过命令新建博客的方式有两种。\n\n<!--more-->\n\n命令1：\n\n```shell\nhexo new \"blog name\"\n```\n\n命令2：\n\n```shell\n hexo new page categories\n```\n\n命令1新建的博客位置在/source/_posts/下，而命令2会首先在/source目录下新建一个名字叫categories的目录，在categories这个目录下会新建一个默认的博客index。实际上，命令2是新建了一个页面，因此需要对文章进行分类的话，可以用命令2新建一个目录，里面存放类别一样的文章。\n\n## 2、其他命令\n\n```shell\n# 清理命令，执行其他命令之前执行\nhexo clean\n# 修改了配置，新建了博客，都可以运行下这个命令\nhexo g\n# 启动本地服务器，访问地址为：localhost:4000\nhexo s\n# 将本地的代码上传到github上面\nhexo d\n```\n\n***注意：1和2中的所有命令都是在根目录下执行的。***","source":"_posts/初识hexo.md","raw":"---\ntitle: 初识hexo\ndate: 2021-11-02 21:25:15\ncategories:\n- 技术\ntags:\n---\n\n## 1、新建博客\n\n通过命令新建博客的方式有两种。\n\n<!--more-->\n\n命令1：\n\n```shell\nhexo new \"blog name\"\n```\n\n命令2：\n\n```shell\n hexo new page categories\n```\n\n命令1新建的博客位置在/source/_posts/下，而命令2会首先在/source目录下新建一个名字叫categories的目录，在categories这个目录下会新建一个默认的博客index。实际上，命令2是新建了一个页面，因此需要对文章进行分类的话，可以用命令2新建一个目录，里面存放类别一样的文章。\n\n## 2、其他命令\n\n```shell\n# 清理命令，执行其他命令之前执行\nhexo clean\n# 修改了配置，新建了博客，都可以运行下这个命令\nhexo g\n# 启动本地服务器，访问地址为：localhost:4000\nhexo s\n# 将本地的代码上传到github上面\nhexo d\n```\n\n***注意：1和2中的所有命令都是在根目录下执行的。***","slug":"初识hexo","published":1,"updated":"2022-01-10T11:08:07.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8m000ku8vx0n077pkm","content":"<h2 id=\"1、新建博客\"><a href=\"#1、新建博客\" class=\"headerlink\" title=\"1、新建博客\"></a>1、新建博客</h2><p>通过命令新建博客的方式有两种。</p>\n<span id=\"more\"></span>\n\n<p>命令1：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;blog name&quot;</span><br></pre></td></tr></table></figure>\n\n<p>命令2：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>命令1新建的博客位置在/source/_posts/下，而命令2会首先在/source目录下新建一个名字叫categories的目录，在categories这个目录下会新建一个默认的博客index。实际上，命令2是新建了一个页面，因此需要对文章进行分类的话，可以用命令2新建一个目录，里面存放类别一样的文章。</p>\n<h2 id=\"2、其他命令\"><a href=\"#2、其他命令\" class=\"headerlink\" title=\"2、其他命令\"></a>2、其他命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 清理命令，执行其他命令之前执行</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改了配置，新建了博客，都可以运行下这个命令</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动本地服务器，访问地址为：localhost:4000</span></span><br><span class=\"line\">hexo s</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将本地的代码上传到github上面</span></span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>注意：1和2中的所有命令都是在根目录下执行的。</strong></em></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"1、新建博客\"><a href=\"#1、新建博客\" class=\"headerlink\" title=\"1、新建博客\"></a>1、新建博客</h2><p>通过命令新建博客的方式有两种。</p>","more":"<p>命令1：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;blog name&quot;</span><br></pre></td></tr></table></figure>\n\n<p>命令2：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>命令1新建的博客位置在/source/_posts/下，而命令2会首先在/source目录下新建一个名字叫categories的目录，在categories这个目录下会新建一个默认的博客index。实际上，命令2是新建了一个页面，因此需要对文章进行分类的话，可以用命令2新建一个目录，里面存放类别一样的文章。</p>\n<h2 id=\"2、其他命令\"><a href=\"#2、其他命令\" class=\"headerlink\" title=\"2、其他命令\"></a>2、其他命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 清理命令，执行其他命令之前执行</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 修改了配置，新建了博客，都可以运行下这个命令</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 启动本地服务器，访问地址为：localhost:4000</span></span><br><span class=\"line\">hexo s</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 将本地的代码上传到github上面</span></span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p><em><strong>注意：1和2中的所有命令都是在根目录下执行的。</strong></em></p>"},{"title":"明史人物记录","date":"2021-11-14T15:12:25.000Z","_content":"\n","source":"_posts/明史人物记录.md","raw":"---\ntitle: 明史人物记录\ndate: 2021-11-14 23:12:25\ncategories:\n- 阅读笔记\ntags:\n---\n\n","slug":"明史人物记录","published":1,"updated":"2022-01-10T12:05:02.221Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cky8nbg8s000uu8vxc6e8axeh","content":"","site":{"data":{}},"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[{"post_id":"cky8nbg890008u8vx0amqdin0","category_id":"cky8nbg840004u8vxb1an9v57","_id":"cky8nbg8h000du8vx6itmd90a"},{"post_id":"cky8nbg7w0001u8vx1n6edsfh","category_id":"cky8nbg840004u8vxb1an9v57","_id":"cky8nbg8k000gu8vx4be5bm2p"},{"post_id":"cky8nbg870006u8vxd54xcofv","category_id":"cky8nbg840004u8vxb1an9v57","_id":"cky8nbg8l000iu8vx20e1cpra"},{"post_id":"cky8nbg8b0009u8vx43qx6pja","category_id":"cky8nbg8h000eu8vx0274a6ex","_id":"cky8nbg8o000mu8vx3sgybcrr"},{"post_id":"cky8nbg8m000ku8vx0n077pkm","category_id":"cky8nbg8h000eu8vx0274a6ex","_id":"cky8nbg8o000nu8vxcsjvdhrg"},{"post_id":"cky8nbg8f000bu8vxhx0kbbnf","category_id":"cky8nbg8h000eu8vx0274a6ex","_id":"cky8nbg8p000pu8vx4hhg6k61"},{"post_id":"cky8nbg8g000cu8vxhd3i58k8","category_id":"cky8nbg8n000lu8vx99yi5d9l","_id":"cky8nbg8p000qu8vxe4423v9x"},{"post_id":"cky8nbg8i000fu8vx04qyb3ph","category_id":"cky8nbg8p000ou8vx8jixavh0","_id":"cky8nbg8q000su8vx11ma860t"},{"post_id":"cky8nbg8k000hu8vx30q7aaxi","category_id":"cky8nbg8p000ru8vxgjbadgdu","_id":"cky8nbg8q000tu8vxa531b6iy"},{"post_id":"cky8nbg8s000uu8vxc6e8axeh","category_id":"cky8nbg8w000vu8vx6zzg8e7m","_id":"cky8nbg8x000wu8vx4m2eaekf"}],"PostTag":[],"Tag":[]}}